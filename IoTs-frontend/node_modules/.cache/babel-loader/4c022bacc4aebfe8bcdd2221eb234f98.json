{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/src/index.js\";\n\n/*\n * @Author: ryma.naiatamara \n * @Date: 2020-02-12 11:23:59 \n * @Last Modified time: 2020-02-12 11:51:36\n * \n *  Copyright (c) 2019 Red Alert Labs S.A.S.\n *  All Rights Reserved.\n *  This software is the confidential and proprietary information of\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\n *  disclose such Confidential Information and shall use it only in\n *  accordance with the terms of the license agreement you entered\n *  into with Red Alert Labs S.A.S.\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\n * \n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport logger from 'redux-logger'; //Monitor\n\nimport thunk from 'redux-thunk'; //Process asynchronous\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './App'; //mport * as serviceWorker from './serviceWorker';\n\nimport reducer from './store/reducer';\nimport config from './util/config';\nimport jwtDecode from 'jwt-decode'; //import FlashMessageList from './flash/FlashMessageList'\n\nimport setToken from './store/utils/validations/setToken'; //token status information\n\nimport { setCurrentUser } from './store/actions/login';\nimport SignIn1 from './Demo/Authentication/SignIn/SignIn1';\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken); //Pass local data into setToken\n\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n} //const store = createStore(reducer);\n\n\nconst app = /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    basename: config.basename,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        forceRefresh: true,\n        exact: true,\n        path: \"/\",\n        component: SignIn1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 5\n}, this);\n\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/src/index.js"],"names":["React","ReactDOM","logger","thunk","createStore","applyMiddleware","Provider","BrowserRouter","Route","composeWithDevTools","App","reducer","config","jwtDecode","setToken","setCurrentUser","SignIn1","store","localStorage","jwtToken","dispatch","app","basename","render","document","getElementById"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAAkC;;AAClC,OAAOC,KAAP,MAAkB,aAAlB,C,CAAkC;;AAClC,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,oCAArB,C,CAAyD;;AACzD,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AAGA,MAAMC,KAAK,GAAGb,WAAW,CAACO,OAAD,EAAUF,mBAAmB,CAACJ,eAAe,CAACH,MAAD,EAASC,KAAT,CAAhB,CAA7B,CAAzB;;AACA,IAAIe,YAAY,CAACC,QAAjB,EAA2B;AACvBL,EAAAA,QAAQ,CAACI,YAAY,CAACC,QAAd,CAAR,CADuB,CACS;;AAChCF,EAAAA,KAAK,CAACG,QAAN,CAAeL,cAAc,CAACF,SAAS,CAACK,YAAY,CAACC,QAAd,CAAV,CAA7B;AACD,C,CAEH;;;AAEA,MAAME,GAAG,gBACL,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA,yBACI,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEL,MAAM,CAACU,QAAhC;AAAA,2BAEI;AAAA,8BAGA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,KAAD;AAAO,QAAA,YAAY,EAAE,IAArB;AAA2B,QAAA,KAAK,MAAhC;AAAiC,QAAA,IAAI,EAAC,GAAtC;AAA0C,QAAA,SAAS,EAAGN;AAAtD;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ;;AAeAf,QAAQ,CAACsB,MAAT,CAAgBF,GAAhB,EAAqBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAEA;AACA;AACA;AACA","sourcesContent":["\n/*\n * @Author: ryma.naiatamara \n * @Date: 2020-02-12 11:23:59 \n * @Last Modified time: 2020-02-12 11:51:36\n * \n *  Copyright (c) 2019 Red Alert Labs S.A.S.\n *  All Rights Reserved.\n *  This software is the confidential and proprietary information of\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\n *  disclose such Confidential Information and shall use it only in\n *  accordance with the terms of the license agreement you entered\n *  into with Red Alert Labs S.A.S.\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\n * \n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport logger from 'redux-logger' //Monitor\nimport thunk from 'redux-thunk'   //Process asynchronous\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport App from './App';\n//mport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './util/config';\nimport jwtDecode from 'jwt-decode'\n//import FlashMessageList from './flash/FlashMessageList'\nimport setToken from './store/utils/validations/setToken'//token status information\nimport { setCurrentUser } from './store/actions/login'\nimport SignIn1 from './Demo/Authentication/SignIn/SignIn1';\n\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(logger, thunk)));\nif (localStorage.jwtToken) {\n    setToken(localStorage.jwtToken) //Pass local data into setToken\n    store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)))\n  }\n  \n//const store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            {/* basename=\"/IoTsTrust\" */}\n            <div>  \n             \n            {/* <FlashMessageList/>         */}\n            <App />\n            <Route forceRefresh={true} exact path=\"/\" component={ SignIn1} /> \n           \n            </div>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}