{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/src/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Aux from \"../../../../../hoc/_Aux\";\nimport DEMO from \"../../../../../store/constant\";\nimport * as actionTypes from \"../../../../../store/actions\";\nimport NavIcon from './../NavIcon';\nimport NavBadge from './../NavBadge';\nimport NavItem from \"../NavItem\";\nimport LoopNavCollapse from './index';\n\nclass NavCollapse extends Component {\n  componentDidMount() {\n    const currentIndex = document.location.pathname.toString().split('/').findIndex(id => id === this.props.collapse.id);\n\n    if (currentIndex > -1) {\n      this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\n    }\n  }\n\n  render() {\n    const {\n      isOpen,\n      isTrigger\n    } = this.props;\n    let navItems = '';\n\n    if (this.props.collapse.children) {\n      const collapses = this.props.collapse.children;\n      navItems = Object.keys(collapses).map(item => {\n        item = collapses[item];\n\n        switch (item.type) {\n          case 'collapse':\n            return /*#__PURE__*/_jsxDEV(LoopNavCollapse, {\n              collapse: item,\n              type: \"sub\"\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 32\n            }, this);\n\n          case 'item':\n            return /*#__PURE__*/_jsxDEV(NavItem, {\n              layout: this.props.layout,\n              item: item\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 32\n            }, this);\n\n          default:\n            return false;\n        }\n      });\n    }\n\n    let itemTitle = this.props.collapse.title;\n\n    if (this.props.collapse.icon) {\n      itemTitle = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pcoded-mtext\",\n        children: this.props.collapse.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this);\n    }\n\n    let navLinkClass = ['nav-link'];\n    let navItemClass = ['nav-item', 'pcoded-hasmenu'];\n    const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\n\n    if (triggerIndex > -1) {\n      navItemClass = [...navItemClass, 'pcoded-trigger'];\n    }\n\n    const currentIndex = document.location.pathname.toString().split('/').findIndex(id => id === this.props.collapse.id);\n\n    if (currentIndex > -1) {\n      navItemClass = [...navItemClass, 'active'];\n\n      if (this.props.layout !== 'horizontal') {\n        navLinkClass = [...navLinkClass, 'active'];\n      }\n    }\n\n    const subContent = /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: DEMO.BLANK_LINK,\n        className: navLinkClass.join(' '),\n        onClick: () => this.props.onCollapseToggle(this.props.collapse.id, this.props.type),\n        children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n          items: this.props.collapse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), itemTitle, /*#__PURE__*/_jsxDEV(NavBadge, {\n          layout: this.props.layout,\n          items: this.props.collapse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pcoded-submenu\",\n        children: navItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n\n    let mainContent = '';\n\n    if (this.props.layout === 'horizontal') {\n      mainContent = /*#__PURE__*/_jsxDEV(\"li\", {\n        className: navItemClass.join(' '),\n        onMouseLeave: () => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type),\n        onMouseEnter: () => this.props.onCollapseToggle(this.props.collapse.id, this.props.type),\n        children: subContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    } else {\n      mainContent = /*#__PURE__*/_jsxDEV(\"li\", {\n        className: navItemClass.join(' '),\n        children: subContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: mainContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.layout,\n    isOpen: state.isOpen,\n    isTrigger: state.isTrigger\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onCollapseToggle: (id, type) => dispatch({\n      type: actionTypes.COLLAPSE_TOGGLE,\n      menu: {\n        id: id,\n        type: type\n      }\n    }),\n    onNavCollapseLeave: (id, type) => dispatch({\n      type: actionTypes.NAV_COLLAPSE_LEAVE,\n      menu: {\n        id: id,\n        type: type\n      }\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/src/layout/AdminLayout/Navigation/NavContent/NavCollapse/index.js"],"names":["React","Component","connect","withRouter","Aux","DEMO","actionTypes","NavIcon","NavBadge","NavItem","LoopNavCollapse","NavCollapse","componentDidMount","currentIndex","document","location","pathname","toString","split","findIndex","id","props","collapse","onCollapseToggle","type","render","isOpen","isTrigger","navItems","children","collapses","Object","keys","map","item","layout","itemTitle","title","icon","navLinkClass","navItemClass","triggerIndex","subContent","BLANK_LINK","join","mainContent","onNavCollapseLeave","mapStateToProps","state","mapDispatchToProps","dispatch","COLLAPSE_TOGGLE","menu","NAV_COLLAPSE_LEAVE"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport Aux from \"../../../../../hoc/_Aux\";\r\nimport DEMO from \"../../../../../store/constant\";\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\nimport NavIcon from './../NavIcon';\r\nimport NavBadge from './../NavBadge';\r\nimport NavItem from \"../NavItem\";\r\nimport LoopNavCollapse from './index';\r\n\r\nclass NavCollapse extends Component {\r\n\r\n    componentDidMount() {\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            this.props.onCollapseToggle(this.props.collapse.id, this.props.type);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isOpen, isTrigger} = this.props;\r\n\r\n        let navItems = '';\r\n        if (this.props.collapse.children) {\r\n            const collapses = this.props.collapse.children;\r\n            navItems = Object.keys(collapses).map(item => {\r\n                item = collapses[item];\r\n                switch (item.type) {\r\n                    case 'collapse':\r\n                        return <LoopNavCollapse key={item.id} collapse={item} type=\"sub\" />;\r\n                    case 'item':\r\n                        return <NavItem layout={this.props.layout} key={item.id} item={item}/>;\r\n                    default:\r\n                        return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        let itemTitle = this.props.collapse.title;\r\n        if (this.props.collapse.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.collapse.title}</span>;\r\n        }\r\n\r\n        let navLinkClass = ['nav-link'];\r\n\r\n        let navItemClass = ['nav-item', 'pcoded-hasmenu'];\r\n        \r\n\r\n        const triggerIndex = isTrigger.findIndex(id => id === this.props.collapse.id);\r\n        if (triggerIndex > -1) {\r\n            navItemClass = [...navItemClass, 'pcoded-trigger'];\r\n        }\r\n\r\n        const currentIndex = ((document.location.pathname).toString().split('/')).findIndex(id => id === this.props.collapse.id);\r\n        if (currentIndex > -1) {\r\n            navItemClass = [...navItemClass, 'active'];\r\n            if (this.props.layout !== 'horizontal') {\r\n                navLinkClass = [...navLinkClass, 'active'];\r\n            }\r\n        }\r\n\r\n        const subContent = (\r\n            <Aux>\r\n                <a href={DEMO.BLANK_LINK} className={navLinkClass.join(' ')} onClick={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    <NavIcon items={this.props.collapse} />\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.collapse} />\r\n                </a>\r\n                <ul className=\"pcoded-submenu\">\r\n                    {navItems}\r\n                </ul>\r\n            </Aux>\r\n        );\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')} onMouseLeave={() => this.props.onNavCollapseLeave(this.props.collapse.id, this.props.type)} onMouseEnter={() => this.props.onCollapseToggle(this.props.collapse.id, this.props.type)}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <li className={navItemClass.join(' ')}>\r\n                    {subContent}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        isOpen: state.isOpen,\r\n        isTrigger: state.isTrigger\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onCollapseToggle: (id, type) => dispatch({type: actionTypes.COLLAPSE_TOGGLE, menu: {id: id, type: type}}),\r\n        onNavCollapseLeave: (id, type) => dispatch({type: actionTypes.NAV_COLLAPSE_LEAVE, menu: {id: id, type: type}})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavCollapse));\r\n"]},"metadata":{},"sourceType":"module"}