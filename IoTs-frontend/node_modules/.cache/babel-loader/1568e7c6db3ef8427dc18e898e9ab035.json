{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/Demo/SecurityProfile/SecurityProfileQuestionnaire.js\";\n\n/*\r\n * @Author: ryma.naiatamara \r\n * @Date: 2020-02-12 11:23:59 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2020-02-12 11:51:36\r\n * \r\n *  Copyright (c) 2019 Red Alert Labs S.A.S.\r\n *  All Rights Reserved.\r\n *  This software is the confidential and proprietary information of\r\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\r\n *  disclose such Confidential Information and shall use it only in\r\n *  accordance with the terms of the license agreement you entered\r\n *  into with Red Alert Labs S.A.S.\r\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\r\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\r\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\r\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\r\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\r\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * \r\n */\n\n/**\r\n * The event is fired after a user clicks the 'Complete' button and finishes a survey. Use this event to send the survey data to your web server.\r\n * sender - the survey object that fires the event.\r\n * options.showDataSaving(text) - call this method to show that the survey is saving survey data on your server. The text is an optional parameter to show a custom message instead of default.\r\n * options.showDataSavingError(text) - call this method to show that an error occurred while saving the data on your server. If you want to show a custom error, use an optional text parameter.\r\n * options.showDataSavingSuccess(text) - call this method to show that the data was successfully saved on the server.\r\n * options.showDataSavingClear - call this method to hide the text about the saving progress.\r\n */\n//   onComplete = (survey, options) => {\n//     console.log(`[MySurvey.js] onComplete:: survey: ${JSON.stringify(survey.data)} \\n options: ${JSON.stringify(options)}`);\n//     this.setState({\n//         isCompleted: true\n//     });\n// }\n\n/**\r\n * The event is fired when the current page has been changed to another page.\r\n * Typically it happens when a user click on 'Next' or 'Prev' buttons.\r\n * sender - the survey object that fires the event.\r\n * option.oldCurrentPage - a previous current/active page.\r\n * option.newCurrentPage - a new current/active page.\r\n * option.isNextPage - commonly means, that end-user press the next page button. In general,\r\n *                     it means that options.newCurrentPage is the next page after options.oldCurrentPage\r\n * option.isPrevPage - commonly means, that end-user press the previous page button.\r\n *                     In general, it means that options.newCurrentPage is the previous page before options.oldCurrentPage\r\n */\n// onCurrentPageChanged = (survey, options) =>  {\n//     console.log(`[MySurvey.js] onCurrentPageChanged:: survey: ${JSON.stringify(survey)} \\n options: ${JSON.stringify(options)}`);\n// }\n\n/**\r\n * Validate a question\r\n * The event is fired on validating value in a question. You can specify a custom error message using options.error.\r\n * The survey blocks completing the survey or going to the next page when the error messages are displayed.\r\n * sender - the survey object that fires the event.\r\n * options.question - a validated question.\r\n * options.name - a question name.\r\n * options.value - the current question value (answer).\r\n * options.error - an error string. It is empty by default.\r\n */\n// onValidateQuestion = (survey, options) => {\n//     console.log(`[MySurvey.js] onValidateQuestion:: options: ${JSON.stringify(options)}`);\n// }\n//SecurityProfileQuestionnaire\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'; //import axios from 'axios';\n\nimport Aux from \"../../hoc/_Aux\";\nimport * as Showdown from \"showdown\";\nimport \"react-simple-tree-menu/dist/main.css\";\nimport * as Survey from 'survey-react';\nimport \"../LandingPage/app.css\";\nimport multipurpose from \"../../assets/images/multipurpose.png\";\nimport cpu from \"../../assets/images/cpu.png\";\nimport discrete from \"../../assets/images/discrete.png\";\nimport actuator from \"../../assets/images/actuator.png\";\nimport network from \"../../assets/images/network.png\";\nimport boot from \"../../assets/images/bootprocess.png\";\nimport drivers from \"../../assets/images/drivers.png\";\nimport programmeconsole from \"../../assets/images/programingconsolesecpro.png\";\nimport firmware from \"../../assets/images/appsfirmware.png\";\nimport buzzer from \"../../assets/images/buzzer.png\";\nimport physical from \"../../assets/images/physicalports.png\";\nimport logfil from \"../../assets/images/logfil.png\";\nimport usercredential from \"../../assets/images/usercredentiel.png\";\nimport sensor from \"../../assets/images/sensor.png\";\nimport Treemenu from './TreeMenu';\nimport \"antd/dist/antd.css\"; //import \"survey-react/survey.css\";\n\nimport \"survey-react/modern.css\"; //Survey.StylesManager.applyTheme(\"modern\");\n\nSurvey.StylesManager.applyTheme(\"modern\");\n\nclass SecurityProfileQuestionnaire extends Component {\n  constructor() {\n    super();\n\n    this.onComplete = model => {\n      model.onComplete.add(function (sender, options) {\n        //Show message about \"Saving...\" the results\n        options.showDataSaving(\"saving responses..\"); //you may pass a text parameter to show your own text\n\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", \"/api/surveyresult/result\"); //xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n\n        xhr.onload = xhr.onerror = function () {\n          if (xhr.status === 200) {\n            options.showDataSavingSuccess(\"success!\"); // you may pass a text parameter to show your own text\n            // Or you may clear all messages:\n            // options.showDataSavingClear();\n          } else {\n            //Error\n            options.showDataSavingError(\"Error when saving the survey on database\"); // you may pass a text parameter to show your own text\n          }\n        };\n\n        xhr.send(JSON.stringify(sender.data));\n      });\n    };\n\n    this.state = {\n      modalShow: false,\n      userInput: '',\n      show: false,\n      key1: \"\",\n      items: [],\n      currentTab: -1\n    };\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this); // this.surveyPrev = React.createRef()\n    // this.surveyNext = React.createRef()\n    // this.surveyComplete = React.createRef()\n    //this.surveyProgress = React.createRef()\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  } //Text Markdown HTML\n\n\n  onTextMarkdown(model, options) {\n    var converter = new Showdown.Converter(); //convert the mardown text to html\n\n    var str = converter.makeHtml(options.text); //remove root paragraphs <p></p>\n\n    str = str.substring(3);\n    str = str.substring(0, str.length - 4); //set html\n\n    options.html = str;\n  } // tooltip\n\n\n  onAfterRenderQuestion(model, options) {\n    //Return if there is no description to show in popup\n    if (!options.question.tooltip) return;\n    var header = options.htmlElement.querySelector(\"h5\");\n    header.title = options.question.tooltip;\n    var span = document.createElement(\"span\");\n    span.innerText = \"?\";\n    span.className = \"survey-tooltip\";\n    header.appendChild(span);\n  }\n\n  onAfterRenderPanel(model, options) {\n    //Return if there is no description to show in popup\n    if (!options.panel.tooltip) return;\n    var header = options.htmlElement.querySelector(\"h4\"); //for panel we have h4 \n\n    if (!!header) {\n      // title is element attribute and you have to use setAttribute function\n      header.setAttribute('title', options.panel.tooltip);\n      var span = document.createElement(\"span\");\n      span.innerText = \"?\";\n      span.className = \"survey-tooltip\"; //header.appendChild(span);\n    }\n  } // New add\n  //Custom Navigation\n  // doOnCurrentPageChanged(model) {\n  //   setTimeout(function () {\n  //     this.surveyPrev.style.display = !this.isFirstPage ? 'inline' : 'none';\n  //     this.surveyNext.style.display = !this.isLastPage ? 'inline' : 'none';\n  //     this.surveyComplete.style.display = this.isLastPage ? 'inline' : 'none';\n  //   }, 0);\n  // }\n  // setupPageSelector = model => {\n  //   var selector = document.getElementById('pageSelector');\n  //   for (var i = 0; i < model.pages.length; i++) {\n  //     var option = document.createElement('option');\n  //     option.value = i;\n  //     option.text = 'Page ' + (i + 1);\n  //     selector.add(option);\n  //   }\n  // }\n  // componentDidMount = () => {\n  //   this.doOnCurrentPageChanged(this.model);\n  //   // this.currentPage(this.model)\n  // }\n  // prevPage = () => {\n  //   this.model.prevPage();\n  //   // this.setActiveStep(this.model.prevPage()- 1);\n  // };\n  // nextPage = () => {\n  //   this.model.nextPage();\n  // };\n  // completeLastPage = () => {\n  //   this.model.completeLastPage();\n  // };\n  // showNavigationButtons(model) {\n  //   this.model.showNavigationButtons = false;\n  // }\n\n\n  showCompletedPage(model, options) {\n    this.model.showCompletedPage = false;\n  } // onComplete=()=>{ \n  //   axios.post('/api/survey')\n  //       .then(res => {\n  //           const secgoals = res.data;\n  //           this.setState({ secgoals });\n  //       })\n  //     }\n  //  onComplete = (survey, options) => {\n  //   console.log(`Resultados do survey : ${survey.data}`);\n  //  }\n  //   onComplete = (result) => {\n  //     let output_data;\n  //     console.log(JSON.stringify(output_data));\n  //   output_data.forEach((result_item) => {\n  //     var resultOutput = JSON.stringify(result_item)\n  //     var request = new XMLHttpRequest();\n  //     request.open('POST', '/api/surveyresult/result', true);\n  //     request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n  //     request.send(resultOutput);\n  //   })\n  // }\n\n\n  // onComplete(model, options) {\n  //   axios.post(\n  //     {\n  //       method: 'post',\n  //       url: '/api/surveyresult/result',\n  //       data: model.data\n  //     });\n  //   console.log(model.data)\n  //   console.log(\"survey results :\" + JSON.stringify(model.data))\n  //   //       .then(res => {\n  //   //           const secgoals = res.data;\n  //   //           this.setState({ secgoals });\n  //   //       })\n  //   //     }\n  // }\n  handleClick(currentTab) {\n    this.setState({\n      currentTab\n    });\n  }\n\n  render() {\n    const json = {\n      //clearInvisibleValues: \"onHidden\",\n      //showProgressBar: \"top\",\n      showProgressBar: \"top\",\n      progressBarType: \"buttons\",\n      pages: [\n      /******************************************************* Collect ********************************************** */\n      {\n        title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\n        name: \"page1\",\n        elements: [{\n          // \"title\": \"Device Features selection\",\n          isRequired: true,\n          type: \"panel\",\n          name: \"panel1\",\n          questions: [{\n            type: \"imagepicker\",\n            name: \"Device Features selection\",\n            // hasSelectAll: true,\n            \"imageHeight\": 50,\n            \"imageWidth\": 50,\n            // hasNone: true,\n            showLabel: true,\n            colCount: 4,\n            //defaultValue:'Sensor',\n            // defaultValue: ['sensor'],\n            //readOnly:\"true\",\n\n            /* noneText: \"None of the above\",\r\n               validators: [{\r\n                 type: \"answercount\",\r\n                 text: \"You should select 0 or 4 images\",\r\n                 minCount: 0,\r\n                 maxCount: 8\r\n               }],*/\n            choices: [{\n              value: \"multipurpose\",\n              text: \"Multipurpose \",\n              //  score: 1,\n              imageLink: `${multipurpose}`\n            }, {\n              value: \"display\",\n              text: \"Display\",\n              // score: 1, \n              imageLink: `${cpu}`\n            }, {\n              value: \"cpu\",\n              text: \"CPU\",\n              // score: 1,\n              imageLink: `${cpu}`\n            }, {\n              value: \"discrete\",\n              text: \"Discrete Components\",\n              // score: 1,\n              imageLink: `${discrete}`\n            }, {\n              value: \"network\",\n              text: \"Network\",\n              // score: 1,\n              imageLink: `${network}`\n            }, {\n              value: \"bootprocess\",\n              text: \"Boot Process \",\n              // score: 1,\n              imageLink: `${boot}`\n            }, {\n              value: \"divers\",\n              text: \"Drivers\",\n              // score: 1,\n              imageLink: `${drivers}`\n            }, {\n              value: \"actuator\",\n              text: \"Actuator\",\n              // score: 1,\n              imageLink: `${actuator}`\n            }, {\n              value: \"programmingconsole\",\n              text: \"Programming Console\",\n              // score: 1,\n              imageLink: `${programmeconsole}`\n            }, {\n              value: \"appsfirmware\",\n              text: \"Apps Firmware \",\n              // score: 1,\n              imageLink: `${firmware}`\n            }, {\n              value: \"buzzer\",\n              text: \"Buzzer\",\n              // score: 1,\n              imageLink: `${buzzer}`\n            }, {\n              value: \"physical\",\n              text: \"Physical Ports & Interfaces\",\n              // score: 1,\n              imageLink: `${physical}`\n            }, {\n              value: \"logfiles\",\n              text: \"Logs Files\",\n              //  score: 1,\n              imageLink: `${logfil}`\n            },\n            /*{\r\n               value: \"configurationdata\",\r\n               text:\"Configuration Data\",\r\n               //score: 1,\r\n               imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/configurationdata.png`  \r\n             },*/\n            {\n              value: \"usercredentials\",\n              text: \"User Credentials\",\n              //  score: 1,\n              imageLink: `${usercredential}`\n            },\n            /*{\r\n               value: \"authentication\",\r\n               text:\"Authentication Data\",\r\n               // score: 1,\r\n               imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/authenticationdata.png`  \r\n             }, {\r\n               value: \"transactiondata\",\r\n               text:\"Transaction Data(commands, requests)\",\r\n               // score: 1,\r\n               imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/transaction.png`  \r\n             }, {\r\n               value: \"accesscontrol\",\r\n               text:\"Access Control Data\",\r\n               // score: 1,\r\n               imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/accesscontrol.png`  \r\n             }, */\n            {\n              value: \"sensor\",\n              text: \"Sensor\",\n              // score: 1,\n              imageLink: `${sensor}`\n            }],\n            multiSelect: true\n          }, {\n            type: \"dropdown\",\n            name: \"sensor\",\n            width: \"200px\",\n            //\"description\": \"(You can select multiple options here, related to your complaint body part selected )\",\n            //\"descriptionLocation\": \"underTitle\",\n            defaultValue: '0',\n            startWithNewLine: \"false\",\n            title: \"Sensor\",\n            choices: [{\n              value: 0,\n              text: \"Temperature\"\n            }, {\n              value: 1,\n              text: \"Machine vision\"\n            }, {\n              value: 2,\n              text: \"Acceleration/Tilt\"\n            }, {\n              value: 3,\n              text: \"Electric/Magnetic\"\n            }, {\n              value: 4,\n              text: \"Leaks/Levels\"\n            }, {\n              value: 5,\n              text: \"Force/Pressure/Strain/Tourque\"\n            }, {\n              value: 6,\n              text: \"Flow\"\n            }, {\n              value: 7,\n              text: \"Chemical\"\n            }, {\n              value: 8,\n              text: \"Acoustic/Sound/Vibration\"\n            }, {\n              value: 9,\n              text: \"Humidity/Moisture\"\n            }, {\n              value: 10,\n              text: \"Motion/Velosity\"\n            }, {\n              value: 11,\n              text: \"Position/Presence/Proximity\"\n            }, {\n              value: 12,\n              text: \"Gas\"\n            }]\n          }]\n        }]\n      },\n      /******************** First question of primary assets************* */\n      {\n        title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\n        name: \"page2\",\n        elements: [{\n          // \"title\": \"Device Features selection\",\n          isRequired: true,\n          type: \"panel\",\n          name: \"panel1\",\n          elements: [{\n            type: \"checkbox\",\n            name: \"processed\",\n            \"renderAs\": \"prettycheckbox\",\n            title: \"What kind of data is your IoT Device/Product processing?\",\n            isRequired: true,\n            hasNone: true,\n            defaultValue: ['none'],\n            //\"startWithNewLine\": false,\n            //\"isRequired\": true,\n            //colCount: 1,\n            // \"choicesOrder\": \"asc\",\n            choices: [{\n              value: \"0\",\n              text: \"Move/Impact\"\n            }, {\n              value: \"1\",\n              text: \"Location\"\n            }, {\n              value: \"2\",\n              text: \"Luminosity\"\n            }, {\n              value: \"3\",\n              text: \"Temperature\"\n            }, {\n              value: \"4\",\n              text: \"Weight\"\n            }, {\n              value: \"5\",\n              text: \"Depth\"\n            }, {\n              value: \"6\",\n              text: \"Pressure\"\n            }, {\n              value: \"7\",\n              text: \"Personal Data\"\n            }, {\n              value: \"8\",\n              text: \"Banking/Financial Data/Security Keys\"\n            }, {\n              value: \"9\",\n              text: \"Configuration Data\"\n            }, {\n              value: \"others\",\n              text: \"Others\"\n            }]\n          }, {\n            type: \"comment\",\n            name: \"otherwise\",\n            visibleIf: \" {processed} contains ['others'] \",\n            title: \"Please specify\"\n          }]\n        }]\n      },\n      /********************* Second question ************************* */\n      {\n        title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\n        name: \"page3\",\n        elements: [{\n          isRequired: true,\n          type: \"panel\",\n          name: \"panel2\",\n          elements: [{\n            type: \"checkbox\",\n            name: \"store\",\n            defaultValue: ['none'],\n            \"renderAs\": \"prettycheckbox\",\n            //\"renderAs\": \"checkbox\",\n            title: \"What kind of data is your IoT Device/Product storing?\",\n            isRequired: true,\n            \"visibleIf\": \"{otherwise} notempty or {processed} notempty  \",\n            \"colCount\": 1,\n            \"hasNone\": true,\n            choices: [{\n              \"value\": \"otherwise\",\n              \"visibleIf\": \"{otherwise} notempty\",\n              \"text\": \"Others: {otherwise}\"\n            }, {\n              value: \"21\",\n              text: \"Move/Impact\"\n            }, {\n              value: \"22\",\n              text: \"Location\"\n            }, {\n              value: \"23\",\n              text: \"Luminosity\"\n            }, {\n              value: \"24\",\n              text: \"Temperature\"\n            }, {\n              value: \"25\",\n              text: \"Weight\"\n            }, {\n              value: \"26\",\n              text: \"Depth\"\n            }, {\n              value: \"27\",\n              text: \"Pressure\"\n            }, {\n              value: \"28\",\n              text: \"Personal Data\"\n            }, {\n              value: \"29\",\n              text: \"Banking/Financial Data/Security Keys\"\n            }, {\n              value: \"30\",\n              text: \"Configuration Data\"\n            }, {\n              value: \"others1\",\n              text: \"Others\"\n            }]\n          }, {\n            type: \"comment\",\n            name: \"stored\",\n            visibleIf: \" {store} contains['others1'] \",\n            title: \"Please specify\"\n          }]\n        }]\n      },\n      /********************************************* third question transported ******************************************** */\n      {\n        title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\n        name: \"page4\",\n        elements: [{\n          isRequired: true,\n          type: \"panel\",\n          name: \"panel3\",\n          elements: [{\n            type: \"checkbox\",\n            //\"renderAs\": \"checkbox\",\n            \"renderAs\": \"prettycheckbox\",\n            name: \"transport\",\n            defaultValue: ['none'],\n            title: \"What kind of data is your IoT Device/Product storing?\",\n            isRequired: true,\n            \"visibleIf\": \"{stored} notempty or {store} notempty or {otherwise} notempty or {processed} notempty \",\n            \"colCount\": 1,\n            \"hasNone\": true,\n            choices: [{\n              \"value\": \"otherwise\",\n              \"visibleIf\": \"{otherwise} notempty\",\n              \"text\": \"Others: {otherwise}\"\n            }, {\n              \"value\": \"stored\",\n              \"visibleIf\": \"{stored} notempty\",\n              \"text\": \"Others: {stored}\"\n            }, {\n              value: \"10\",\n              text: \"Move/Impact\"\n            }, {\n              value: \"11\",\n              text: \"Location\"\n            }, {\n              value: \"12\",\n              text: \"Luminosity\"\n            }, {\n              value: \"13\",\n              text: \"Temperature\"\n            }, {\n              value: \"14\",\n              text: \"Weight\"\n            }, {\n              value: \"15\",\n              text: \"Depth\"\n            }, {\n              value: \"16\",\n              text: \"Pressure\"\n            }, {\n              value: \"17\",\n              text: \"Personal Data\"\n            }, {\n              value: \"18\",\n              text: \"Banking/Financial Data/Security Keys\"\n            }, {\n              value: \"19\",\n              text: \"Configuration Data\"\n            }, {\n              value: \"others2\",\n              text: \"Others\"\n            }]\n          }, {\n            type: \"comment\",\n            name: \"transported\",\n            visibleIf: \" {transport} contains 'others2' \",\n            title: \"Please specify\"\n          }]\n        }]\n      },\n      /******************************************** forth Question**************************************** */\n      {\n        title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\n        name: \"page5\",\n        elements: [{\n          isRequired: true,\n          type: \"panel\",\n          name: \"panel4\",\n          elements: [{\n            type: \"checkbox\",\n            name: \"active\",\n            defaultValue: ['none'],\n            \"renderAs\": \"prettycheckbox\",\n            title: \"What kind of data is exchanged during device activation?\",\n            isRequired: true,\n            \"colCount\": 1,\n            \"hasNone\": true,\n            choices: [{\n              value: \"30\",\n              text: \"Personal Data\"\n            }, {\n              value: \"31\",\n              text: \"Banking/Financial Data\"\n            }, {\n              value: \"32\",\n              text: \"Configuration Data/ Security Keys\"\n            }, {\n              value: \"33\",\n              text: \"I don't know\"\n            }, {\n              value: \"others3\",\n              text: \"Others\"\n            }]\n          }, {\n            type: \"comment\",\n            name: \"actived\",\n            visibleIf: \"{active} contains'others3' \",\n            title: \"Please specify\"\n          }]\n        }]\n      }\n      /********************************************* End of json *********************************** */\n      ],\n      \"showQuestionNumbers\": \"off\" // completedHtml: \"<p><h4>Thank you for completing the Questionnaire...</h4></p>\"\n\n    };\n    const model = new Survey.Model(json);\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Modal, {\n            \"aria-labelledby\": \"contained-modal-title-vcenter\",\n            centered: true,\n            show: this.state.show,\n            onHide: this.handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\",\n                  paddingTop: \"50px\",\n                  paddingBottom: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-check-circle   text-success fa-5x\",\n                  \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 798,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: \"  Great, we have done all the operations! \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  textAlign: \"center\",\n                  padding: \"20px\"\n                },\n                children: \" Do you want to continue? \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                onClick: this.handleClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/primary-asset\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  children: \"Next Step\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 43\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 2,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Treemenu, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xl: 10,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Survey.Survey, {\n                  model: model,\n                  id: \"survey\",\n                  onAfterRenderQuestion: this.onAfterRenderQuestion,\n                  onAfterRenderPanel: this.onAfterRenderPanel //showNavigationButtons={this.showNavigationButtons}\n                  // onComplete={(result)=> console.log(result.data)}\n                  ,\n                  onComplete: this.onComplete,\n                  onTextMarkdown: this.onTextMarkdown //onComplete={sendDataToServer}\n                  ,\n                  onCurrentPageChanged: this.doOnCurrentPageChanged,\n                  sendResultOnPageNext: true,\n                  showCompletedPage: this.showCompletedPage,\n                  onPartialSend: this.onSurveyPartialSend\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-right\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/landing\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary shadow-2 mb-4\",\n            children: \"Previous Step\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 32\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleShow,\n          className: \"btn btn-primary shadow-2 mb-4\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SecurityProfileQuestionnaire;","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/Demo/SecurityProfile/SecurityProfileQuestionnaire.js"],"names":["React","Component","Row","Col","Card","Button","Modal","Link","Aux","Showdown","Survey","multipurpose","cpu","discrete","actuator","network","boot","drivers","programmeconsole","firmware","buzzer","physical","logfil","usercredential","sensor","Treemenu","StylesManager","applyTheme","SecurityProfileQuestionnaire","constructor","onComplete","model","add","sender","options","showDataSaving","xhr","XMLHttpRequest","open","onload","onerror","status","showDataSavingSuccess","showDataSavingError","send","JSON","stringify","data","state","modalShow","userInput","show","key1","items","currentTab","handleShow","bind","handleClose","handleClick","setState","onTextMarkdown","converter","Converter","str","makeHtml","text","substring","length","html","onAfterRenderQuestion","question","tooltip","header","htmlElement","querySelector","title","span","document","createElement","innerText","className","appendChild","onAfterRenderPanel","panel","setAttribute","showCompletedPage","render","json","showProgressBar","progressBarType","pages","name","elements","isRequired","type","questions","showLabel","colCount","choices","value","imageLink","multiSelect","width","defaultValue","startWithNewLine","hasNone","visibleIf","Model","textAlign","paddingTop","paddingBottom","padding","doOnCurrentPageChanged","onSurveyPartialSend"],"mappings":"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","sourcesContent":["/*\r\n * @Author: ryma.naiatamara \r\n * @Date: 2020-02-12 11:23:59 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2020-02-12 11:51:36\r\n * \r\n *  Copyright (c) 2019 Red Alert Labs S.A.S.\r\n *  All Rights Reserved.\r\n *  This software is the confidential and proprietary information of\r\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\r\n *  disclose such Confidential Information and shall use it only in\r\n *  accordance with the terms of the license agreement you entered\r\n *  into with Red Alert Labs S.A.S.\r\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\r\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\r\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\r\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\r\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\r\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * \r\n */\r\n\r\n\r\n/**\r\n * The event is fired after a user clicks the 'Complete' button and finishes a survey. Use this event to send the survey data to your web server.\r\n * sender - the survey object that fires the event.\r\n * options.showDataSaving(text) - call this method to show that the survey is saving survey data on your server. The text is an optional parameter to show a custom message instead of default.\r\n * options.showDataSavingError(text) - call this method to show that an error occurred while saving the data on your server. If you want to show a custom error, use an optional text parameter.\r\n * options.showDataSavingSuccess(text) - call this method to show that the data was successfully saved on the server.\r\n * options.showDataSavingClear - call this method to hide the text about the saving progress.\r\n */\r\n//   onComplete = (survey, options) => {\r\n//     console.log(`[MySurvey.js] onComplete:: survey: ${JSON.stringify(survey.data)} \\n options: ${JSON.stringify(options)}`);\r\n//     this.setState({\r\n//         isCompleted: true\r\n//     });\r\n// }\r\n\r\n/**\r\n * The event is fired when the current page has been changed to another page.\r\n * Typically it happens when a user click on 'Next' or 'Prev' buttons.\r\n * sender - the survey object that fires the event.\r\n * option.oldCurrentPage - a previous current/active page.\r\n * option.newCurrentPage - a new current/active page.\r\n * option.isNextPage - commonly means, that end-user press the next page button. In general,\r\n *                     it means that options.newCurrentPage is the next page after options.oldCurrentPage\r\n * option.isPrevPage - commonly means, that end-user press the previous page button.\r\n *                     In general, it means that options.newCurrentPage is the previous page before options.oldCurrentPage\r\n */\r\n// onCurrentPageChanged = (survey, options) =>  {\r\n//     console.log(`[MySurvey.js] onCurrentPageChanged:: survey: ${JSON.stringify(survey)} \\n options: ${JSON.stringify(options)}`);\r\n// }\r\n\r\n/**\r\n * Validate a question\r\n * The event is fired on validating value in a question. You can specify a custom error message using options.error.\r\n * The survey blocks completing the survey or going to the next page when the error messages are displayed.\r\n * sender - the survey object that fires the event.\r\n * options.question - a validated question.\r\n * options.name - a question name.\r\n * options.value - the current question value (answer).\r\n * options.error - an error string. It is empty by default.\r\n */\r\n// onValidateQuestion = (survey, options) => {\r\n//     console.log(`[MySurvey.js] onValidateQuestion:: options: ${JSON.stringify(options)}`);\r\n// }\r\n\r\n\r\n//SecurityProfileQuestionnaire\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Card, Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"react-simple-tree-menu/dist/main.css\";\r\nimport * as Survey from 'survey-react';\r\nimport \"../LandingPage/app.css\";\r\nimport multipurpose from \"../../assets/images/multipurpose.png\";\r\nimport cpu from \"../../assets/images/cpu.png\";\r\nimport discrete from \"../../assets/images/discrete.png\";\r\nimport actuator from \"../../assets/images/actuator.png\";\r\nimport network from \"../../assets/images/network.png\";\r\nimport boot from \"../../assets/images/bootprocess.png\";\r\nimport drivers from \"../../assets/images/drivers.png\";\r\nimport programmeconsole from \"../../assets/images/programingconsolesecpro.png\";\r\nimport firmware from \"../../assets/images/appsfirmware.png\";\r\nimport buzzer from \"../../assets/images/buzzer.png\";\r\nimport physical from \"../../assets/images/physicalports.png\";\r\nimport logfil from \"../../assets/images/logfil.png\";\r\nimport usercredential from \"../../assets/images/usercredentiel.png\";\r\nimport sensor from \"../../assets/images/sensor.png\";\r\nimport Treemenu from './TreeMenu'\r\n\r\nimport \"antd/dist/antd.css\";\r\n//import \"survey-react/survey.css\";\r\nimport \"survey-react/modern.css\";\r\n\r\n//Survey.StylesManager.applyTheme(\"modern\");\r\nSurvey.StylesManager.applyTheme(\"modern\");\r\n\r\n\r\nclass SecurityProfileQuestionnaire extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      modalShow: false,\r\n      userInput: '',\r\n      show: false,\r\n      key1: \"\",\r\n      items: [],\r\n      currentTab: -1,\r\n    };\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    // this.surveyPrev = React.createRef()\r\n    // this.surveyNext = React.createRef()\r\n    // this.surveyComplete = React.createRef()\r\n    //this.surveyProgress = React.createRef()\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n  }\r\n\r\n\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n  }\r\n  handleShow() {\r\n    this.setState({ show: true });\r\n  }\r\n\r\n  //Text Markdown HTML\r\n  onTextMarkdown(model, options) {\r\n    var converter = new Showdown.Converter();\r\n    //convert the mardown text to html\r\n    var str = converter.makeHtml(options.text);\r\n    //remove root paragraphs <p></p>\r\n    str = str.substring(3);\r\n    str = str.substring(0, str.length - 4);\r\n    //set html\r\n    options.html = str;\r\n  }\r\n\r\n  // tooltip\r\n  onAfterRenderQuestion(model, options) {\r\n    //Return if there is no description to show in popup\r\n    if (!options.question.tooltip)\r\n      return;\r\n    var header = options\r\n      .htmlElement\r\n      .querySelector(\"h5\");\r\n    header.title = options.question.tooltip;\r\n    var span = document.createElement(\"span\");\r\n    span.innerText = \"?\";\r\n    span.className = \"survey-tooltip\";\r\n    header.appendChild(span);\r\n  }\r\n\r\n  onAfterRenderPanel(model, options) {\r\n    //Return if there is no description to show in popup\r\n    if (!options.panel.tooltip)\r\n      return;\r\n\r\n    var header = options\r\n      .htmlElement\r\n      .querySelector(\"h4\"); //for panel we have h4 \r\n    if (!!header) {\r\n      // title is element attribute and you have to use setAttribute function\r\n      header.setAttribute('title', options.panel.tooltip)\r\n      var span = document.createElement(\"span\");\r\n      span.innerText = \"?\";\r\n      span.className = \"survey-tooltip\";\r\n      //header.appendChild(span);\r\n    }\r\n  }\r\n\r\n  // New add\r\n  //Custom Navigation\r\n  // doOnCurrentPageChanged(model) {\r\n  //   setTimeout(function () {\r\n  //     this.surveyPrev.style.display = !this.isFirstPage ? 'inline' : 'none';\r\n  //     this.surveyNext.style.display = !this.isLastPage ? 'inline' : 'none';\r\n  //     this.surveyComplete.style.display = this.isLastPage ? 'inline' : 'none';\r\n  //   }, 0);\r\n  // }\r\n\r\n  // setupPageSelector = model => {\r\n  //   var selector = document.getElementById('pageSelector');\r\n  //   for (var i = 0; i < model.pages.length; i++) {\r\n  //     var option = document.createElement('option');\r\n  //     option.value = i;\r\n  //     option.text = 'Page ' + (i + 1);\r\n  //     selector.add(option);\r\n  //   }\r\n  // }\r\n  // componentDidMount = () => {\r\n  //   this.doOnCurrentPageChanged(this.model);\r\n  //   // this.currentPage(this.model)\r\n  // }\r\n  // prevPage = () => {\r\n  //   this.model.prevPage();\r\n  //   // this.setActiveStep(this.model.prevPage()- 1);\r\n  // };\r\n  // nextPage = () => {\r\n  //   this.model.nextPage();\r\n  // };\r\n  // completeLastPage = () => {\r\n  //   this.model.completeLastPage();\r\n  // };\r\n  // showNavigationButtons(model) {\r\n  //   this.model.showNavigationButtons = false;\r\n  // }\r\n  showCompletedPage(model, options) {\r\n    this.model.showCompletedPage = false;\r\n  }\r\n  // onComplete=()=>{ \r\n  //   axios.post('/api/survey')\r\n  //       .then(res => {\r\n  //           const secgoals = res.data;\r\n  //           this.setState({ secgoals });\r\n  //       })\r\n  //     }\r\n  //  onComplete = (survey, options) => {\r\n  //   console.log(`Resultados do survey : ${survey.data}`);\r\n  //  }\r\n  //   onComplete = (result) => {\r\n  //     let output_data;\r\n  //     console.log(JSON.stringify(output_data));\r\n  //   output_data.forEach((result_item) => {\r\n  //     var resultOutput = JSON.stringify(result_item)\r\n  //     var request = new XMLHttpRequest();\r\n  //     request.open('POST', '/api/surveyresult/result', true);\r\n  //     request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\r\n  //     request.send(resultOutput);\r\n  //   })\r\n  // }\r\n  onComplete = (model) => {\r\n    model.onComplete.add(function (sender, options) {\r\n      //Show message about \"Saving...\" the results\r\n      options.showDataSaving(\"saving responses..\");//you may pass a text parameter to show your own text\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"/api/surveyresult/result\");\r\n      //xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\r\n      xhr.onload = xhr.onerror = function () {\r\n        if (xhr.status === 200) {\r\n          options.showDataSavingSuccess(\"success!\"); // you may pass a text parameter to show your own text\r\n          // Or you may clear all messages:\r\n          // options.showDataSavingClear();\r\n        } else {\r\n          //Error\r\n          options.showDataSavingError(\"Error when saving the survey on database\"); // you may pass a text parameter to show your own text\r\n        }\r\n      };\r\n      xhr.send(JSON.stringify(sender.data));\r\n    });\r\n  }\r\n\r\n  // onComplete(model, options) {\r\n  //   axios.post(\r\n  //     {\r\n  //       method: 'post',\r\n  //       url: '/api/surveyresult/result',\r\n  //       data: model.data\r\n\r\n  //     });\r\n  //   console.log(model.data)\r\n  //   console.log(\"survey results :\" + JSON.stringify(model.data))\r\n  //   //       .then(res => {\r\n  //   //           const secgoals = res.data;\r\n  //   //           this.setState({ secgoals });\r\n  //   //       })\r\n  //   //     }\r\n  // }\r\n\r\n  handleClick(currentTab) {\r\n    this.setState({ currentTab });\r\n  }\r\n\r\n  render() {\r\n    const json = {\r\n      //clearInvisibleValues: \"onHidden\",\r\n      //showProgressBar: \"top\",\r\n      showProgressBar: \"top\",\r\n      progressBarType: \"buttons\",\r\n      pages: [\r\n    \r\n        /******************************************************* Collect ********************************************** */\r\n        {\r\n          title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\r\n          name: \"page1\",\r\n          elements: [\r\n    \r\n            {\r\n              // \"title\": \"Device Features selection\",\r\n              isRequired: true,\r\n              type: \"panel\",\r\n              name: \"panel1\",\r\n    \r\n              questions: [\r\n                {\r\n                  type: \"imagepicker\",\r\n                  name: \"Device Features selection\",\r\n                  // hasSelectAll: true,\r\n                  \"imageHeight\": 50,\r\n                  \"imageWidth\": 50,\r\n                  // hasNone: true,\r\n                  showLabel: true,\r\n                  colCount: 4,\r\n                  //defaultValue:'Sensor',\r\n                  // defaultValue: ['sensor'],\r\n    \r\n                  //readOnly:\"true\",\r\n                  /* noneText: \"None of the above\",\r\n                     validators: [{\r\n                       type: \"answercount\",\r\n                       text: \"You should select 0 or 4 images\",\r\n                       minCount: 0,\r\n                       maxCount: 8\r\n                     }],*/\r\n    \r\n                  choices: [\r\n                    {\r\n                      value: \"multipurpose\",\r\n                      text: \"Multipurpose \",\r\n                      //  score: 1,\r\n                      imageLink: `${multipurpose}`\r\n                    }, {\r\n                      value: \"display\",\r\n                      text: \"Display\",\r\n                      // score: 1, \r\n                      imageLink: `${cpu}`\r\n                    }, {\r\n                      value: \"cpu\",\r\n                      text: \"CPU\",\r\n                      // score: 1,\r\n                      imageLink: `${cpu}`\r\n                    }, {\r\n                      value: \"discrete\",\r\n                      text: \"Discrete Components\",\r\n                      // score: 1,\r\n                      imageLink: `${discrete}`\r\n                    }, {\r\n                      value: \"network\",\r\n                      text: \"Network\",\r\n                      // score: 1,\r\n                      imageLink: `${network}`\r\n                    }, {\r\n                      value: \"bootprocess\",\r\n                      text: \"Boot Process \",\r\n                      // score: 1,\r\n                      imageLink: `${boot}`\r\n                    }, {\r\n                      value: \"divers\",\r\n                      text: \"Drivers\",\r\n                      // score: 1,\r\n                      imageLink: `${drivers}`\r\n                    }, {\r\n                      value: \"actuator\",\r\n                      text: \"Actuator\",\r\n                      // score: 1,\r\n                      imageLink: `${actuator}`\r\n                    }, {\r\n                      value: \"programmingconsole\",\r\n                      text: \"Programming Console\",\r\n                      // score: 1,\r\n                      imageLink: `${programmeconsole}`\r\n                    },\r\n                    {\r\n                      value: \"appsfirmware\",\r\n                      text: \"Apps Firmware \",\r\n                      // score: 1,\r\n                      imageLink: `${firmware}`\r\n                    }, {\r\n                      value: \"buzzer\",\r\n                      text: \"Buzzer\",\r\n                      // score: 1,\r\n                      imageLink: `${buzzer}`\r\n                    }, {\r\n                      value: \"physical\",\r\n                      text: \"Physical Ports & Interfaces\",\r\n                      // score: 1,\r\n                      imageLink: `${physical}`\r\n                    }, {\r\n                      value: \"logfiles\",\r\n                      text: \"Logs Files\",\r\n    \r\n                      //  score: 1,\r\n                      imageLink: `${logfil}`\r\n                    }, /*{\r\n                          value: \"configurationdata\",\r\n                          text:\"Configuration Data\",\r\n                          //score: 1,\r\n                          imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/configurationdata.png`  \r\n                        },*/ {\r\n                      value: \"usercredentials\",\r\n                      text: \"User Credentials\",\r\n                      //  score: 1,\r\n                      imageLink: `${usercredential}`\r\n                    }, /*{\r\n                          value: \"authentication\",\r\n                          text:\"Authentication Data\",\r\n                          // score: 1,\r\n                          imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/authenticationdata.png`  \r\n                        }, {\r\n                          value: \"transactiondata\",\r\n                          text:\"Transaction Data(commands, requests)\",\r\n                          // score: 1,\r\n                          imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/transaction.png`  \r\n                        }, {\r\n                          value: \"accesscontrol\",\r\n                          text:\"Access Control Data\",\r\n                          // score: 1,\r\n                          imageLink: `${process.env.PUBLIC_URL}/assets/img/icon/accesscontrol.png`  \r\n                        }, */{\r\n                      value: \"sensor\",\r\n                      text: \"Sensor\",\r\n                      // score: 1,\r\n                      imageLink: `${sensor}`\r\n                    },\r\n                  ],\r\n                  multiSelect: true\r\n                },\r\n                {\r\n                  type: \"dropdown\",\r\n                  name: \"sensor\",\r\n                  width: \"200px\",\r\n                  //\"description\": \"(You can select multiple options here, related to your complaint body part selected )\",\r\n                  //\"descriptionLocation\": \"underTitle\",\r\n                  defaultValue: '0',\r\n                  startWithNewLine: \"false\",\r\n                  title: \"Sensor\",\r\n                  choices: [\r\n    \r\n                    { value: 0, text: \"Temperature\" },\r\n                    { value: 1, text: \"Machine vision\" },\r\n                    { value: 2, text: \"Acceleration/Tilt\" },\r\n                    { value: 3, text: \"Electric/Magnetic\" },\r\n                    { value: 4, text: \"Leaks/Levels\" },\r\n                    { value: 5, text: \"Force/Pressure/Strain/Tourque\" },\r\n                    { value: 6, text: \"Flow\" },\r\n                    { value: 7, text: \"Chemical\" },\r\n                    { value: 8, text: \"Acoustic/Sound/Vibration\" },\r\n                    { value: 9, text: \"Humidity/Moisture\" },\r\n                    { value: 10, text: \"Motion/Velosity\" },\r\n                    { value: 11, text: \"Position/Presence/Proximity\" },\r\n                    { value: 12, text: \"Gas\" },\r\n    \r\n                  ]\r\n                }],\r\n            }]\r\n        },\r\n    \r\n        /******************** First question of primary assets************* */\r\n    \r\n        {\r\n    \r\n          title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\r\n          name: \"page2\",\r\n          elements: [{\r\n            // \"title\": \"Device Features selection\",\r\n            isRequired: true,\r\n            type: \"panel\",\r\n            name: \"panel1\",\r\n            elements: [{\r\n              type: \"checkbox\",\r\n              name: \"processed\",\r\n              \"renderAs\": \"prettycheckbox\",\r\n              title: \"What kind of data is your IoT Device/Product processing?\",\r\n              isRequired: true,\r\n              hasNone: true,\r\n              defaultValue: ['none'],\r\n              //\"startWithNewLine\": false,\r\n              //\"isRequired\": true,\r\n              //colCount: 1,\r\n              // \"choicesOrder\": \"asc\",\r\n              choices: [\r\n    \r\n                {\r\n                  value: \"0\",\r\n                  text: \"Move/Impact\"\r\n                },\r\n                {\r\n                  value: \"1\",\r\n                  text: \"Location\",\r\n                },\r\n                {\r\n                  value: \"2\",\r\n                  text: \"Luminosity\",\r\n                },\r\n                {\r\n                  value: \"3\",\r\n                  text: \"Temperature\",\r\n                },\r\n                {\r\n                  value: \"4\",\r\n                  text: \"Weight\",\r\n                },\r\n                {\r\n                  value: \"5\",\r\n                  text: \"Depth\",\r\n                },\r\n    \r\n                {\r\n                  value: \"6\",\r\n                  text: \"Pressure\",\r\n                },\r\n                {\r\n                  value: \"7\",\r\n                  text: \"Personal Data\",\r\n                },\r\n                {\r\n                  value: \"8\",\r\n                  text: \"Banking/Financial Data/Security Keys\",\r\n                },\r\n                {\r\n                  value: \"9\",\r\n                  text: \"Configuration Data\",\r\n                },\r\n                {\r\n                  value: \"others\",\r\n                  text: \"Others\",\r\n                },\r\n    \r\n              ]\r\n            },\r\n    \r\n            {\r\n              type: \"comment\",\r\n              name: \"otherwise\",\r\n              visibleIf: \" {processed} contains ['others'] \",\r\n              title: \"Please specify\",\r\n            },\r\n            ]\r\n          }\r\n          ]\r\n        },\r\n    \r\n        /********************* Second question ************************* */\r\n        {\r\n    \r\n          title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\r\n          name: \"page3\",\r\n    \r\n          elements: [{\r\n    \r\n            isRequired: true,\r\n            type: \"panel\",\r\n            name: \"panel2\",\r\n    \r\n    \r\n            elements: [{\r\n    \r\n              type: \"checkbox\",\r\n              name: \"store\",\r\n              defaultValue: ['none'],\r\n              \"renderAs\": \"prettycheckbox\",\r\n              //\"renderAs\": \"checkbox\",\r\n              title: \"What kind of data is your IoT Device/Product storing?\",\r\n              isRequired: true,\r\n              \"visibleIf\": \"{otherwise} notempty or {processed} notempty  \",\r\n              \"colCount\": 1,\r\n              \"hasNone\": true,\r\n              choices: [\r\n    \r\n                {\r\n                  \"value\": \"otherwise\",\r\n                  \"visibleIf\": \"{otherwise} notempty\",\r\n                  \"text\": \"Others: {otherwise}\"\r\n                },\r\n    \r\n                {\r\n                  value: \"21\",\r\n                  text: \"Move/Impact\"\r\n                },\r\n                {\r\n                  value: \"22\",\r\n                  text: \"Location\",\r\n                },\r\n                {\r\n                  value: \"23\",\r\n                  text: \"Luminosity\",\r\n                },\r\n                {\r\n                  value: \"24\",\r\n                  text: \"Temperature\",\r\n                },\r\n                {\r\n                  value: \"25\",\r\n                  text: \"Weight\",\r\n                },\r\n                {\r\n                  value: \"26\",\r\n                  text: \"Depth\",\r\n                },\r\n    \r\n                {\r\n                  value: \"27\",\r\n                  text: \"Pressure\",\r\n                },\r\n                {\r\n                  value: \"28\",\r\n                  text: \"Personal Data\",\r\n                },\r\n                {\r\n                  value: \"29\",\r\n                  text: \"Banking/Financial Data/Security Keys\",\r\n                },\r\n                {\r\n                  value: \"30\",\r\n                  text: \"Configuration Data\",\r\n                },\r\n                {\r\n                  value: \"others1\",\r\n                  text: \"Others\",\r\n                },\r\n    \r\n              ]\r\n            },\r\n            {\r\n              type: \"comment\",\r\n              name: \"stored\",\r\n              visibleIf: \" {store} contains['others1'] \",\r\n              title: \"Please specify\",\r\n    \r\n            },\r\n    \r\n    \r\n    \r\n            ]\r\n          }\r\n          ]\r\n        },\r\n    \r\n    \r\n        /********************************************* third question transported ******************************************** */\r\n    \r\n    \r\n        {\r\n          title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\r\n          name: \"page4\",\r\n          elements: [{\r\n            isRequired: true,\r\n            type: \"panel\",\r\n            name: \"panel3\",\r\n            elements: [{\r\n              type: \"checkbox\",\r\n              //\"renderAs\": \"checkbox\",\r\n              \"renderAs\": \"prettycheckbox\",\r\n              name: \"transport\",\r\n              defaultValue: ['none'],\r\n              title: \"What kind of data is your IoT Device/Product storing?\",\r\n              isRequired: true,\r\n              \"visibleIf\": \"{stored} notempty or {store} notempty or {otherwise} notempty or {processed} notempty \",\r\n              \"colCount\": 1,\r\n              \"hasNone\": true,\r\n              choices: [\r\n                {\r\n                  \"value\": \"otherwise\",\r\n                  \"visibleIf\": \"{otherwise} notempty\",\r\n                  \"text\": \"Others: {otherwise}\"\r\n                },\r\n                {\r\n                  \"value\": \"stored\",\r\n                  \"visibleIf\": \"{stored} notempty\",\r\n                  \"text\": \"Others: {stored}\"\r\n                },\r\n    \r\n                {\r\n                  value: \"10\",\r\n                  text: \"Move/Impact\"\r\n                },\r\n                {\r\n                  value: \"11\",\r\n                  text: \"Location\",\r\n                },\r\n                {\r\n                  value: \"12\",\r\n                  text: \"Luminosity\",\r\n                },\r\n                {\r\n                  value: \"13\",\r\n                  text: \"Temperature\",\r\n                },\r\n                {\r\n                  value: \"14\",\r\n                  text: \"Weight\",\r\n                },\r\n                {\r\n                  value: \"15\",\r\n                  text: \"Depth\",\r\n                },\r\n    \r\n                {\r\n                  value: \"16\",\r\n                  text: \"Pressure\",\r\n                },\r\n                {\r\n                  value: \"17\",\r\n                  text: \"Personal Data\",\r\n                },\r\n                {\r\n                  value: \"18\",\r\n                  text: \"Banking/Financial Data/Security Keys\",\r\n                },\r\n                {\r\n                  value: \"19\",\r\n                  text: \"Configuration Data\",\r\n                },\r\n                {\r\n                  value: \"others2\",\r\n                  text: \"Others\",\r\n                },\r\n              ]\r\n            },\r\n            {\r\n              type: \"comment\",\r\n              name: \"transported\",\r\n              visibleIf: \" {transport} contains 'others2' \",\r\n              title: \"Please specify\"\r\n            }\r\n            ]\r\n          }\r\n          ]\r\n        },\r\n    \r\n        /******************************************** forth Question**************************************** */\r\n    \r\n        {\r\n          title: \"<span class='v' style=' align:center ;text-align:center !important'>This is the page <b style='font-size:15px ;color:#9e1a16'>{pageno}</b> of <b style='font-size:15px ; color:#9e1a16'>{pagecount}</b> </span>\",\r\n          name: \"page5\",\r\n          elements: [{\r\n    \r\n            isRequired: true,\r\n            type: \"panel\",\r\n            name: \"panel4\",\r\n            elements: [{\r\n              type: \"checkbox\",\r\n              name: \"active\",\r\n              defaultValue: ['none'],\r\n              \"renderAs\": \"prettycheckbox\",\r\n              title: \"What kind of data is exchanged during device activation?\",\r\n              isRequired: true,\r\n              \"colCount\": 1,\r\n              \"hasNone\": true,\r\n              choices: [\r\n                {\r\n                  value: \"30\",\r\n                  text: \"Personal Data\",\r\n                },\r\n                {\r\n                  value: \"31\",\r\n                  text: \"Banking/Financial Data\",\r\n                },\r\n                {\r\n                  value: \"32\",\r\n                  text: \"Configuration Data/ Security Keys\",\r\n                },\r\n                {\r\n                  value: \"33\",\r\n                  text: \"I don't know\",\r\n                },\r\n                {\r\n                  value: \"others3\",\r\n                  text: \"Others\",\r\n                },\r\n              ]\r\n            },\r\n            {\r\n              type: \"comment\",\r\n              name: \"actived\",\r\n              visibleIf: \"{active} contains'others3' \",\r\n              title: \"Please specify\",\r\n            },\r\n            ]\r\n          }\r\n          ]\r\n        },\r\n        /********************************************* End of json *********************************** */\r\n      ],\r\n      \"showQuestionNumbers\": \"off\",\r\n      // completedHtml: \"<p><h4>Thank you for completing the Questionnaire...</h4></p>\"\r\n    };\r\n    const model = new Survey.Model(json);\r\n\r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <>\r\n            <Modal\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              centered\r\n              show={this.state.show} onHide={this.handleClose}>\r\n\r\n              <Modal.Body>\r\n                <div style={{ textAlign: \"center\", paddingTop: \"50px\", paddingBottom: \"20px\" }}>\r\n                  <i class=\"fa fa-check-circle   text-success fa-5x\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <h5 style={{ textAlign: \"center\" }}>  Great, we have done all the operations! </h5>\r\n                <h4 style={{ textAlign: \"center\", padding: \"20px\" }}> Do you want to continue? </h4>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                  Close\r\n            </Button>\r\n                <Link to=\"/primary-asset\"><Button variant=\"primary\" >\r\n                  Next Step\r\n            </Button> </Link>\r\n              </Modal.Footer>\r\n            </Modal>\r\n            <Col xl={2}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Treemenu />\r\n                </Card.Body>\r\n              </Card>\r\n\r\n            </Col>\r\n            <Col xl={10}>\r\n              <Card >\r\n\r\n                <Card.Body >\r\n                  <Survey.Survey\r\n                    model={model}\r\n                    id=\"survey\"\r\n                    onAfterRenderQuestion={this.onAfterRenderQuestion}\r\n                    onAfterRenderPanel={this.onAfterRenderPanel}\r\n                    //showNavigationButtons={this.showNavigationButtons}\r\n                    // onComplete={(result)=> console.log(result.data)}\r\n                    onComplete={this.onComplete}\r\n                    onTextMarkdown={this.onTextMarkdown}\r\n                    //onComplete={sendDataToServer}\r\n                    onCurrentPageChanged={this.doOnCurrentPageChanged}\r\n                    sendResultOnPageNext={true}\r\n                    showCompletedPage={this.showCompletedPage}\r\n                    onPartialSend={this.onSurveyPartialSend}\r\n                    \r\n                  />\r\n                  {/* <Button  id=\"surveyPrev\" size=\"middle\" shape=\"round\" size=\"middle\" shape=\"round\" disabled={this.activeStep === 0} onClick={() => { this.prevPage() }} type=\"primary\">\r\n                  Prev page\r\n                            </Button>\r\n                <Button  id=\"surveyNext\" size=\"middle\" shape=\"round\" onClick={() => { this.nextPage(); }} type=\"primary\">\r\n                  Next page\r\n                            </Button>\r\n                // <Link to=\"/redalertlabs-primaryasset\"> <Button  id=\"surveyComplete\" size=\"middle\" shape=\"round\" onClick={() => {/* message.success('Processing complete!'); this.completeLastPage(); this.next() }} type=\"primary\">\r\n                  {/* Next step\r\n                            </Button>\r\n                            </Link> */}\r\n                </Card.Body>\r\n              </Card >\r\n            </Col>\r\n          </>\r\n        </Row>\r\n        <br />\r\n        <div className=\"mb-4 text-right\" >\r\n          <Link to=\"/landing\"> <button className=\"btn btn-secondary shadow-2 mb-4\">Previous Step</button> </Link>\r\n          <button onClick={this.handleShow} className=\"btn btn-primary shadow-2 mb-4\">Save Changes</button>\r\n        </div>\r\n      </Aux>\r\n    )\r\n\r\n  }\r\n}\r\nexport default SecurityProfileQuestionnaire;"]},"metadata":{},"sourceType":"module"}