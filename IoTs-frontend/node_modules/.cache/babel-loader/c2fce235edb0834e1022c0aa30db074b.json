{"ast":null,"code":"/*\r\n * @Author: ryma.naiatamara \r\n * @Date: 2020-02-12 11:23:59 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2020-02-12 11:51:36\r\n * \r\n *  Copyright (c) 2019 Red Alert Labs S.A.S.\r\n *  All Rights Reserved.\r\n *  This software is the confidential and proprietary information of\r\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\r\n *  disclose such Confidential Information and shall use it only in\r\n *  accordance with the terms of the license agreement you entered\r\n *  into with Red Alert Labs S.A.S.\r\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\r\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\r\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\r\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\r\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\r\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * \r\n */\nimport axios from 'axios';\nimport setToken from '../utils/validations/setToken';\nimport { SET_CURRENT_USER } from \"../actions\";\nimport jwtdecode from \"jwt-decode\"; //Decrypt token cnpm install --save decode\n//Trigger the reducer to pass in the user\n\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}; //Log out\n\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem(\"jwtToken\"); //Clear jxtToken\n    //Clear request header information\n\n    setToken(false); //Clear Token data\n\n    dispatch(setCurrentUser({}));\n  };\n};\nexport const login = data => {\n  return dispatch => {\n    return axios.post(\"/api/auth\", data).then(res => {\n      const token = res.data; //Get token\n\n      localStorage.setItem('jwtToken', token); //Save to local\n\n      setToken(token); //At this time, the token can be handed in to the background for processing\n\n      dispatch(setCurrentUser(jwtdecode(token))); //The distribution event is triggered and the decrypted token is passed in\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/store/actions/login.js"],"names":["axios","setToken","SET_CURRENT_USER","jwtdecode","setCurrentUser","user","type","logout","dispatch","localStorage","removeItem","login","data","post","then","res","token","setItem"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;AAEpC;;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,gBADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAME,MAAM,GAAG,MAAM;AACxB,SAAOC,QAAQ,IAAI;AACfC,IAAAA,YAAY,CAACC,UAAb,CAAwB,UAAxB,EADe,CACqB;AACpC;;AACAT,IAAAA,QAAQ,CAAC,KAAD,CAAR,CAHe,CAIf;;AACAO,IAAAA,QAAQ,CAACJ,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,GAND;AAOH,CARM;AAUP,OAAO,MAAMO,KAAK,GAAIC,IAAD,IAAU;AAC3B,SAAOJ,QAAQ,IAAI;AACf,WAAOR,KAAK,CAACa,IAAN,CAAW,WAAX,EAAwBD,IAAxB,EAA8BE,IAA9B,CAAmCC,GAAG,IAAI;AAC7C,YAAMC,KAAK,GAAGD,GAAG,CAACH,IAAlB,CAD6C,CACrB;;AACxBH,MAAAA,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCD,KAAjC,EAF6C,CAEJ;;AACzCf,MAAAA,QAAQ,CAACe,KAAD,CAAR,CAH6C,CAG7B;;AAChBR,MAAAA,QAAQ,CAACJ,cAAc,CAACD,SAAS,CAACa,KAAD,CAAV,CAAf,CAAR,CAJ6C,CAIF;AAC9C,KALM,CAAP;AAMH,GAPD;AAQH,CATM","sourcesContent":["/*\r\n * @Author: ryma.naiatamara \r\n * @Date: 2020-02-12 11:23:59 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2020-02-12 11:51:36\r\n * \r\n *  Copyright (c) 2019 Red Alert Labs S.A.S.\r\n *  All Rights Reserved.\r\n *  This software is the confidential and proprietary information of\r\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\r\n *  disclose such Confidential Information and shall use it only in\r\n *  accordance with the terms of the license agreement you entered\r\n *  into with Red Alert Labs S.A.S.\r\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\r\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\r\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\r\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\r\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\r\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * \r\n */\r\n\r\nimport axios from 'axios'\r\nimport setToken from '../utils/validations/setToken'\r\nimport { SET_CURRENT_USER } from \"../actions\";\r\nimport jwtdecode from \"jwt-decode\"; //Decrypt token cnpm install --save decode\r\n\r\n//Trigger the reducer to pass in the user\r\nexport const setCurrentUser = (user) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        user\r\n    }\r\n}\r\n\r\n//Log out\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem(\"jwtToken\");//Clear jxtToken\r\n        //Clear request header information\r\n        setToken(false);\r\n        //Clear Token data\r\n        dispatch(setCurrentUser({}))\r\n    }\r\n}\r\n\r\nexport const login = (data) => {\r\n    return dispatch => {\r\n        return axios.post(\"/api/auth\", data).then(res => {\r\n            const token = res.data; //Get token\r\n            localStorage.setItem('jwtToken', token); //Save to local\r\n            setToken(token) //At this time, the token can be handed in to the background for processing\r\n            dispatch(setCurrentUser(jwtdecode(token))) //The distribution event is triggered and the decrypted token is passed in\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}