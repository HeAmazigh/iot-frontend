{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/components/layout/AdminLayout/Navigation/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport windowSize from 'react-window-size';\nimport NavLogo from './NavLogo';\nimport NavContent from './NavContent';\nimport OutsideClick from './OutsideClick';\nimport Aux from './../../../../hoc/_Aux';\nimport * as actionTypes from './../../../../store/actions';\nimport navigation from '../../../../menu-items';\n\nclass Navigation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.resize = () => {\n      const contentWidth = document.getElementById('root').clientWidth;\n\n      if (this.props.layout === 'horizontal' && contentWidth < 992) {\n        this.props.onChangeLayout('vertical');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.resize();\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    let navClass = ['pcoded-navbar'];\n\n    if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\n      navClass = [...navClass, this.props.preLayout];\n    } else {\n      navClass = [...navClass, this.props.layoutType, this.props.navBackColor, this.props.navBrandColor, 'drp-icon-' + this.props.navDropdownIcon, 'menu-item-icon-' + this.props.navListIcon, this.props.navActiveListColor, this.props.navListTitleColor];\n\n      if (this.props.layout === 'horizontal') {\n        navClass = [...navClass, 'theme-horizontal'];\n      }\n\n      if (this.props.navBackImage) {\n        navClass = [...navClass, this.props.navBackImage];\n      }\n\n      if (this.props.navIconColor) {\n        navClass = [...navClass, 'icon-colored'];\n      }\n\n      if (!this.props.navFixedLayout) {\n        navClass = [...navClass, 'menupos-static'];\n      }\n\n      if (this.props.navListTitleHide) {\n        navClass = [...navClass, 'caption-hide'];\n      }\n    }\n\n    if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n      navClass = [...navClass, 'mob-open'];\n    } else if (this.props.collapseMenu) {\n      navClass = [...navClass, 'navbar-collapsed'];\n    }\n\n    if (this.props.preLayout === 'layout-6') {\n      document.body.classList.add('layout-6');\n      document.body.style.backgroundImage = this.props.layout6Background;\n      document.body.style.backgroundSize = this.props.layout6BackSize;\n    }\n\n    if (this.props.preLayout === 'layout-8') {\n      document.body.classList.add('layout-8');\n    }\n\n    if (this.props.layoutType === 'dark') {\n      document.body.classList.add('datta-dark');\n    } else {\n      document.body.classList.remove('datta-dark');\n    }\n\n    if (this.props.rtlLayout) {\n      document.body.classList.add('datta-rtl');\n    } else {\n      document.body.classList.remove('datta-rtl');\n    }\n\n    if (this.props.boxLayout) {\n      document.body.classList.add('container');\n      document.body.classList.add('box-layout');\n    } else {\n      document.body.classList.remove('container');\n      document.body.classList.remove('box-layout');\n    }\n\n    let navContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n        collapseMenu: this.props.collapseMenu,\n        windowWidth: this.props.windowWidth,\n        onToggleNavigation: this.props.onToggleNavigation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), this.props.id === '1' ? /*#__PURE__*/_jsxDEV(NavContent, {\n        navigation: navigation.items1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(NavContent, {\n        navigation: navigation.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n\n    if (this.props.windowWidth < 992) {\n      navContent = /*#__PURE__*/_jsxDEV(OutsideClick, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(NavLogo, {\n            collapseMenu: this.props.collapseMenu,\n            windowWidth: this.props.windowWidth,\n            onToggleNavigation: this.props.onToggleNavigation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), this.props.id === '1' ? /*#__PURE__*/_jsxDEV(NavContent, {\n            navigation: navigation.items1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(NavContent, {\n            navigation: navigation.items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: navClass.join(' '),\n        children: navContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.layout,\n    preLayout: state.preLayout,\n    collapseMenu: state.collapseMenu,\n    layoutType: state.layoutType,\n    navBackColor: state.navBackColor,\n    navBackImage: state.navBackImage,\n    navIconColor: state.navIconColor,\n    navBrandColor: state.navBrandColor,\n    layout6Background: state.layout6Background,\n    layout6BackSize: state.layout6BackSize,\n    rtlLayout: state.rtlLayout,\n    navFixedLayout: state.navFixedLayout,\n    boxLayout: state.boxLayout,\n    navDropdownIcon: state.navDropdownIcon,\n    navListIcon: state.navListIcon,\n    navActiveListColor: state.navActiveListColor,\n    navListTitleColor: state.navListTitleColor,\n    navListTitleHide: state.navListTitleHide\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleNavigation: () => dispatch({\n      type: actionTypes.COLLAPSE_MENU\n    }),\n    onChangeLayout: layout => dispatch({\n      type: actionTypes.CHANGE_LAYOUT,\n      layout: layout\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/components/layout/AdminLayout/Navigation/index.js"],"names":["React","Component","connect","withRouter","windowSize","NavLogo","NavContent","OutsideClick","Aux","actionTypes","navigation","Navigation","resize","contentWidth","document","getElementById","clientWidth","props","layout","onChangeLayout","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","navClass","preLayout","layoutType","navBackColor","navBrandColor","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navBackImage","navIconColor","navFixedLayout","navListTitleHide","windowWidth","collapseMenu","body","classList","add","style","backgroundImage","layout6Background","backgroundSize","layout6BackSize","remove","rtlLayout","boxLayout","navContent","onToggleNavigation","id","items1","items","join","mapStateToProps","state","mapDispatchToProps","dispatch","type","COLLAPSE_MENU","CHANGE_LAYOUT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport NavLogo from './NavLogo';\r\nimport NavContent from './NavContent';\r\nimport OutsideClick from './OutsideClick';\r\nimport Aux from './../../../../hoc/_Aux'\r\nimport * as actionTypes from './../../../../store/actions';\r\nimport navigation from '../../../../menu-items';\r\n\r\nclass Navigation extends Component {\r\n\r\n    resize = () => {\r\n        const contentWidth = document.getElementById('root').clientWidth;\r\n\r\n        if (this.props.layout === 'horizontal' && contentWidth < 992) {\r\n            this.props.onChangeLayout('vertical');\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resize();\r\n        window.addEventListener('resize', this.resize)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize)\r\n    }\r\n\r\n    render() {\r\n        let navClass = [\r\n            'pcoded-navbar',\r\n        ];\r\n\r\n        if (this.props.preLayout !== null && this.props.preLayout !== '' && this.props.preLayout !== 'layout-6' && this.props.preLayout !== 'layout-8') {\r\n            navClass = [...navClass, this.props.preLayout];\r\n        } else {\r\n            navClass = [\r\n                ...navClass,\r\n                this.props.layoutType,\r\n                this.props.navBackColor,\r\n                this.props.navBrandColor,\r\n                'drp-icon-'+this.props.navDropdownIcon,\r\n                'menu-item-icon-'+this.props.navListIcon,\r\n                this.props.navActiveListColor,\r\n                this.props.navListTitleColor,\r\n            ];\r\n\r\n            if (this.props.layout === 'horizontal') {\r\n                navClass = [...navClass, 'theme-horizontal'];\r\n            }\r\n\r\n            if (this.props.navBackImage) {\r\n                navClass = [...navClass, this.props.navBackImage];\r\n            }\r\n\r\n            if (this.props.navIconColor) {\r\n                navClass = [...navClass, 'icon-colored'];\r\n            }\r\n\r\n            if (!this.props.navFixedLayout) {\r\n                navClass = [...navClass, 'menupos-static'];\r\n            }\r\n\r\n            if (this.props.navListTitleHide) {\r\n                navClass = [...navClass, 'caption-hide'];\r\n            }\r\n        }\r\n\r\n        if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n            navClass = [...navClass, 'mob-open'];\r\n        } else if (this.props.collapseMenu) {\r\n            navClass = [...navClass, 'navbar-collapsed'];\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-6') {\r\n            document.body.classList.add('layout-6');\r\n            document.body.style.backgroundImage = this.props.layout6Background;\r\n            document.body.style.backgroundSize = this.props.layout6BackSize;\r\n        }\r\n\r\n        if (this.props.preLayout === 'layout-8') {\r\n            document.body.classList.add('layout-8');\r\n        }\r\n\r\n        if (this.props.layoutType === 'dark') {\r\n            document.body.classList.add('datta-dark');\r\n        } else {\r\n            document.body.classList.remove('datta-dark');\r\n        }\r\n\r\n        if (this.props.rtlLayout) {\r\n            document.body.classList.add('datta-rtl');\r\n        } else {\r\n            document.body.classList.remove('datta-rtl');\r\n        }\r\n\r\n        if (this.props.boxLayout) {\r\n            document.body.classList.add('container');\r\n            document.body.classList.add('box-layout');\r\n        } else {\r\n            document.body.classList.remove('container');\r\n            document.body.classList.remove('box-layout');\r\n        }\r\n\r\n        let navContent = (\r\n            <div className=\"navbar-wrapper\">\r\n                <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n             {/* // we can change menu sidebar content, on changing items with items1 another export default  */}\r\n             {\r\n                this.props.id === '1' ?\r\n             (\r\n                <NavContent navigation={navigation.items1} /> \r\n             ) : \r\n             (\r\n                <NavContent navigation={navigation.items} /> \r\n             )\r\n      }\r\n            </div>\r\n        );\r\n        if (this.props.windowWidth < 992) {\r\n            navContent = (\r\n                <OutsideClick>\r\n                    <div className=\"navbar-wrapper\">\r\n                        <NavLogo collapseMenu={this.props.collapseMenu} windowWidth={this.props.windowWidth} onToggleNavigation={this.props.onToggleNavigation} />\r\n                        {/* // The same thing here we can change menu sidebar content, on changing items with items1 another export default  */}\r\n                      \r\n                        {\r\n                this.props.id=== '1' ?\r\n             (  <NavContent navigation={navigation.items1} />\r\n             ):(\r\n                <NavContent navigation={navigation.items} />  \r\n             )}\r\n                    </div>\r\n                </OutsideClick>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <nav className={navClass.join(' ')}>\r\n                    {navContent}\r\n                </nav>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        preLayout: state.preLayout,\r\n        collapseMenu: state.collapseMenu,\r\n        layoutType: state.layoutType,\r\n        navBackColor: state.navBackColor,\r\n        navBackImage: state.navBackImage,\r\n        navIconColor: state.navIconColor,\r\n        navBrandColor: state.navBrandColor,\r\n        layout6Background: state.layout6Background,\r\n        layout6BackSize: state.layout6BackSize,\r\n        rtlLayout: state.rtlLayout,\r\n        navFixedLayout: state.navFixedLayout,\r\n        boxLayout: state.boxLayout,\r\n        navDropdownIcon: state.navDropdownIcon,\r\n        navListIcon: state.navListIcon,\r\n        navActiveListColor: state.navActiveListColor,\r\n        navListTitleColor: state.navListTitleColor,\r\n        navListTitleHide: state.navListTitleHide\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onChangeLayout: (layout) => dispatch({type: actionTypes.CHANGE_LAYOUT, layout: layout}),\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(Navigation)));\r\n"]},"metadata":{},"sourceType":"module"}