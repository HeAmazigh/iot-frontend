{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/Demo/Authentication/SignUp/SignUpForm.js\";\n\n/*\r\n * @Author: ryma.naiatamara \r\n * @Date: 2020-02-12 11:23:59 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2020-02-12 11:51:36\r\n * \r\n *  Copyright (c) 2019 Red Alert Labs S.A.S.\r\n *  All Rights Reserved.\r\n *  This software is the confidential and proprietary information of\r\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\r\n *  disclose such Confidential Information and shall use it only in\r\n *  accordance with the terms of the license agreement you entered\r\n *  into with Red Alert Labs S.A.S.\r\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\r\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\r\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\r\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\r\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\r\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * \r\n */\nimport React from 'react';\nimport classnames from 'classnames'; //withRouter\n\nimport { NavLink, Link, withRouter } from 'react-router-dom';\nimport './../../../assets/scss/style.scss';\nimport DEMO from \"../../../store/constant\";\n\nclass SignUpForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      //Block the default behavior\n      e.preventDefault();\n      this.setState({\n        errors: {},\n        isLoading: true\n      }); //Call the signupActions passed by the parent component\n\n      this.props.signupActions.userSignupRequest(this.state).then(() => {\n        //Join rudex\n        this.props.flashMessage.addFlashMeeage({\n          type: \"success\",\n          text: \" registration success！\"\n        }); //withRouterhistory={this.props.history}\n\n        this.props.history.push(\"/\");\n      }, ({\n        response\n      }) => {\n        this.setState({\n          errors: response.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.checkUserExists = e => {\n      const field = e.target.name;\n      const val = e.target.value;\n      let invalid;\n\n      if (val !== \"\") {\n        this.props.signupActions.isUserExists(val).then(res => {\n          let errors = this.state.errors;\n\n          if (res.data[0]) {\n            errors[field] = \" Username exists: \" + val;\n            invalid = true; //The button is true when successful\n          } else {\n            errors[field] = \"\";\n            invalid = false;\n          }\n\n          this.setState({\n            errors,\n            invalid\n          });\n        });\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      passwordConfirmation: \"\",\n      errors: {},\n      isLoading: false,\n      invalid: false\n    };\n  } //Get the input text, get the target value and add it to the target name\n\n\n  render() {\n    const {\n      errors,\n      isLoading,\n      invalid\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"feather icon-user-plus auth-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-4\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              placeholder: \"username\",\n              value: this.state.username,\n              onChange: this.onChange,\n              onBlur: this.checkUserExists,\n              className: classnames('form-control', {\n                'is-invalid': errors.username\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-text text-muted\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"email\",\n              type: \"email\",\n              name: \"email\",\n              maxLength: \"40\",\n              value: this.state.email,\n              onChange: this.onChange,\n              className: classnames('form-control', {\n                'is-invalid': errors.email\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-text text-muted\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"password\",\n              value: this.state.password,\n              onChange: this.onChange,\n              className: classnames('form-control', {\n                'is-invalid': errors.password\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-text text-muted\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"confirm password\",\n              name: \"passwordConfirmation\",\n              value: this.state.passwordConfirmation,\n              onChange: this.onChange,\n              className: classnames('form-control', {\n                'is-invalid': errors.passwordConfirmation\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), errors.passwordConfirmation && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"form-text text-muted\",\n              children: errors.passwordConfirmation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox checkbox-fill d-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"checkbox-fill-2\",\n                id: \"checkbox-fill-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"checkbox-fill-2\",\n                className: \"cr\",\n                children: [\"Send me the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: DEMO.BLANK_LINK,\n                  children: \" Newsletter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 93\n                }, this), \" weekly.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard/default\",\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: isLoading || invalid,\n              className: \"btn btn-primary shadow-2 mb-4\",\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 57\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0 text-muted\",\n            children: [\"Allready have an account? \", /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/auth/signin-1\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 82\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(SignUpForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/Demo/Authentication/SignUp/SignUpForm.js"],"names":["React","classnames","NavLink","Link","withRouter","DEMO","SignUpForm","Component","constructor","props","onChange","e","setState","target","name","value","onSubmit","preventDefault","errors","isLoading","signupActions","userSignupRequest","state","then","flashMessage","addFlashMeeage","type","text","history","push","response","data","checkUserExists","field","val","invalid","isUserExists","res","username","password","email","passwordConfirmation","render","BLANK_LINK"],"mappings":"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","sourcesContent":["/*\r\n * @Author: ryma.naiatamara \r\n * @Date: 2020-02-12 11:23:59 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2020-02-12 11:51:36\r\n * \r\n *  Copyright (c) 2019 Red Alert Labs S.A.S.\r\n *  All Rights Reserved.\r\n *  This software is the confidential and proprietary information of\r\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\r\n *  disclose such Confidential Information and shall use it only in\r\n *  accordance with the terms of the license agreement you entered\r\n *  into with Red Alert Labs S.A.S.\r\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\r\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\r\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\r\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\r\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\r\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\r\n * \r\n */\r\n\r\nimport React from 'react'\r\nimport classnames from 'classnames'\r\n//withRouter\r\nimport {NavLink, Link,withRouter} from 'react-router-dom'\r\n\r\nimport './../../../assets/scss/style.scss';\r\n\r\nimport DEMO from \"../../../store/constant\";\r\n\r\n\r\n\r\nclass SignUpForm extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            passwordConfirmation: \"\",\r\n            errors: {},\r\n            isLoading: false,\r\n            invalid:false\r\n        }\r\n    }\r\n\r\n    //Get the input text, get the target value and add it to the target name\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    //Send request when submitting\r\n    onSubmit = (e) => {\r\n        //Block the default behavior\r\n        e.preventDefault()\r\n        this.setState({ errors: {}, isLoading: true })\r\n\r\n        //Call the signupActions passed by the parent component\r\n        this.props.signupActions.userSignupRequest(this.state).then(\r\n            () => {\r\n\r\n                //Join rudex\r\n                this.props.flashMessage.addFlashMeeage({\r\n                    type: \"success\",\r\n                    text: \" registration success！\"\r\n                })\r\n\r\n                //withRouterhistory={this.props.history}\r\n                this.props.history.push(\"/\")\r\n            },\r\n            ({ response }) => {\r\n                this.setState({\r\n                    errors: response.data,\r\n                    isLoading: false\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    //Username exists //check user\r\n    checkUserExists = (e) => {\r\n        const field = e.target.name;\r\n        const val = e.target.value;\r\n        let invalid;\r\n        if (val !== \"\") {\r\n            this.props.signupActions.isUserExists(val).then(res => {\r\n                let errors = this.state.errors;\r\n                if (res.data[0]) {\r\n                    errors[field] = \" Username exists: \" + val;\r\n                    invalid = true\r\n                    //The button is true when successful\r\n                } else {\r\n                    errors[field] = \"\";\r\n                    invalid = false\r\n                }\r\n                this.setState({ errors, invalid })\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { errors, isLoading, invalid } = this.state\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body text-center\">\r\n                    <div className=\"mb-4\">\r\n                        <i className=\"feather icon-user-plus auth-icon\" />\r\n                    </div>\r\n                    <h3 className=\"mb-4\">Sign up</h3>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                placeholder=\"username\"\r\n                                value={this.state.username}\r\n                                onChange={this.onChange}\r\n                                onBlur={this.checkUserExists}\r\n                                className={classnames('form-control', { 'is-invalid': errors.username })}\r\n                            />\r\n                            {errors.username && <span className=\"form-text text-muted\">{errors.username}</span>}\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                                placeholder=\"email\"\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                maxLength=\"40\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChange}\r\n                                className={classnames('form-control', { 'is-invalid': errors.email })}\r\n                            />\r\n                            {errors.email && <span className=\"form-text text-muted\">{errors.email}</span>}\r\n                        </div>\r\n                        <div className=\"input-group mb-4\">\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChange}\r\n                                className={classnames('form-control', { 'is-invalid': errors.password })}\r\n                            />\r\n                            {errors.password && <span className=\"form-text text-muted\">{errors.password}</span>}\r\n                        </div>\r\n                        <div className=\"input-group mb-4\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"confirm password\"\r\n                                name=\"passwordConfirmation\"\r\n                                value={this.state.passwordConfirmation}\r\n                                onChange={this.onChange}\r\n                                className={classnames('form-control', { 'is-invalid': errors.passwordConfirmation })}\r\n                            />\r\n                            {errors.passwordConfirmation && <span className=\"form-text text-muted\">{errors.passwordConfirmation}</span>}\r\n                        </div>\r\n                        <div className=\"form-group text-left\">\r\n                            <div className=\"checkbox checkbox-fill d-inline\">\r\n                                <input type=\"checkbox\" name=\"checkbox-fill-2\" id=\"checkbox-fill-2\" />\r\n                                <label htmlFor=\"checkbox-fill-2\" className=\"cr\">Send me the <a href={DEMO.BLANK_LINK}> Newsletter</a> weekly.</label>\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/dashboard/default\">  <button disabled={isLoading || invalid} className=\"btn btn-primary shadow-2 mb-4\">Sign up</button> </Link>\r\n                        <p className=\"mb-0 text-muted\">Allready have an account? <NavLink to=\"/auth/signin-1\">Login</NavLink></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(SignUpForm)"]},"metadata":{},"sourceType":"module"}