{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/components/layout/AdminLayout/Navigation/NavContent/NavItem/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport windowSize from 'react-window-size';\nimport Aux from \"../../../../../../hoc/_Aux\";\nimport NavIcon from \"./../NavIcon\";\nimport NavBadge from \"./../NavBadge\";\nimport * as actionTypes from \"../../../../../../store/actions\";\n\nclass NavItem extends Component {\n  render() {\n    let itemTitle = this.props.item.title;\n\n    if (this.props.item.icon) {\n      itemTitle = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pcoded-mtext\",\n        children: this.props.item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this);\n    }\n\n    let itemTarget = '';\n\n    if (this.props.item.target) {\n      itemTarget = '_blank';\n    }\n\n    let subContent;\n\n    if (this.props.item.external) {\n      subContent = /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.props.item.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n          items: this.props.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), itemTitle, /*#__PURE__*/_jsxDEV(NavBadge, {\n          layout: this.props.layout,\n          items: this.props.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    } else {\n      subContent = /*#__PURE__*/_jsxDEV(NavLink, {\n        to: this.props.item.url,\n        className: \"nav-link\",\n        exact: true,\n        target: itemTarget,\n        children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n          items: this.props.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), itemTitle, /*#__PURE__*/_jsxDEV(NavBadge, {\n          layout: this.props.layout,\n          items: this.props.item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this);\n    }\n\n    let mainContent = '';\n\n    if (this.props.layout === 'horizontal') {\n      mainContent = /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: this.props.onItemLeave,\n        children: subContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this);\n    } else {\n      if (this.props.windowWidth < 992) {\n        mainContent = /*#__PURE__*/_jsxDEV(\"li\", {\n          className: this.props.item.classes,\n          onClick: this.props.onItemClick,\n          children: subContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this);\n      } else {\n        mainContent = /*#__PURE__*/_jsxDEV(\"li\", {\n          className: this.props.item.classes,\n          children: subContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: mainContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.layout,\n    collapseMenu: state.collapseMenu\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onItemClick: () => dispatch({\n      type: actionTypes.COLLAPSE_MENU\n    }),\n    onItemLeave: () => dispatch({\n      type: actionTypes.NAV_CONTENT_LEAVE\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(windowSize(NavItem)));","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/components/layout/AdminLayout/Navigation/NavContent/NavItem/index.js"],"names":["React","Component","connect","NavLink","withRouter","windowSize","Aux","NavIcon","NavBadge","actionTypes","NavItem","render","itemTitle","props","item","title","icon","itemTarget","target","subContent","external","url","layout","mainContent","onItemLeave","windowWidth","classes","onItemClick","mapStateToProps","state","collapseMenu","mapDispatchToProps","dispatch","type","COLLAPSE_MENU","NAV_CONTENT_LEAVE"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {withRouter} from 'react-router-dom';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../../../../../hoc/_Aux\";\r\nimport NavIcon from \"./../NavIcon\";\r\nimport NavBadge from \"./../NavBadge\";\r\nimport * as actionTypes from \"../../../../../../store/actions\";\r\n\r\nclass NavItem extends Component {\r\n\r\n    render() {\r\n        let itemTitle = this.props.item.title;\r\n        if (this.props.item.icon) {\r\n            itemTitle = <span className=\"pcoded-mtext\">{this.props.item.title}</span>;\r\n        }\r\n\r\n        let itemTarget = '';\r\n        if (this.props.item.target) {\r\n            itemTarget = '_blank';\r\n        }\r\n\r\n        let subContent;\r\n        if(this.props.item.external) {\r\n            subContent = (\r\n                <a href={this.props.item.url} target='_blank' rel='noopener noreferrer'>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </a>\r\n            );\r\n        } else {\r\n            subContent = (\r\n                <NavLink to={this.props.item.url} className=\"nav-link\" exact={true} target={itemTarget}>\r\n                    <NavIcon items={this.props.item}/>\r\n                    {itemTitle}\r\n                    <NavBadge layout={this.props.layout} items={this.props.item}/>\r\n                </NavLink>\r\n            );\r\n        }\r\n        let mainContent = '';\r\n        if (this.props.layout === 'horizontal') {\r\n            mainContent = (\r\n                <li onClick={this.props.onItemLeave}>{subContent}</li>\r\n            );\r\n        } else {\r\n            if (this.props.windowWidth < 992) {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes} onClick={this.props.onItemClick}>{subContent}</li>\r\n                );\r\n            } else {\r\n                mainContent = (\r\n                    <li className={this.props.item.classes}>{subContent}</li>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                {mainContent}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.layout,\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onItemClick: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n        onItemLeave: () => dispatch({type: actionTypes.NAV_CONTENT_LEAVE})\r\n    }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps) (windowSize(NavItem)));\r\n"]},"metadata":{},"sourceType":"module"}