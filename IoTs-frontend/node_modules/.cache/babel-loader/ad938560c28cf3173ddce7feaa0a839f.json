{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/components/layout/AdminLayout/NavBar/NavRight/ChatList/Friends/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport friend from './friends';\nimport Friend from './Friend';\nimport Chat from './Chat';\nimport Aux from \"../../../../../../../hoc/_Aux\";\n\nclass Friends extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatOpen: false,\n      user: []\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      if (!nextProps.listOpen) {\n        this.setState({\n          chatOpen: false,\n          user: []\n        });\n      }\n    };\n  }\n\n  render() {\n    const friendList = friend.map(f => {\n      return /*#__PURE__*/_jsxDEV(Friend, {\n        data: f,\n        activeId: this.state.user.id,\n        clicked: () => this.setState({\n          chatOpen: true,\n          user: f\n        })\n      }, f.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [friendList, /*#__PURE__*/_jsxDEV(Chat, {\n        user: this.state.user,\n        chatOpen: this.state.chatOpen,\n        listOpen: this.props.listOpen,\n        closed: () => this.setState({\n          chatOpen: false,\n          user: []\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/components/layout/AdminLayout/NavBar/NavRight/ChatList/Friends/index.js"],"names":["React","Component","Fragment","friend","Friend","Chat","Aux","Friends","state","chatOpen","user","componentWillReceiveProps","nextProps","listOpen","setState","render","friendList","map","f","id","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACJC,MAAAA,QAAQ,EAAE,KADN;AAEJC,MAAAA,IAAI,EAAE;AAFF,KADoB;;AAAA,SAM5BC,yBAN4B,GAMCC,SAAD,IAAe;AACvC,UAAI,CAACA,SAAS,CAACC,QAAf,EAAyB;AACrB,aAAKC,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAd;AACH;AACJ,KAV2B;AAAA;;AAY5BK,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAIb,MAAD,CAASc,GAAT,CAAaC,CAAC,IAAI;AACjC,0BAAO,QAAC,MAAD;AAAmB,QAAA,IAAI,EAAEA,CAAzB;AAA4B,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,EAAtD;AAA0D,QAAA,OAAO,EAAE,MAAM,KAAKL,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEQ;AAAvB,SAAd;AAAzE,SAAaA,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFkB,CAAnB;AAGA,wBACI,QAAC,QAAD;AAAA,iBACKH,UADL,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWE,IAAvB;AAA6B,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QAAlD;AAA4D,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWP,QAAjF;AAA2F,QAAA,MAAM,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAd;AAAzG;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAtB2B;;AAyBhC,eAAeH,OAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\n\r\nimport friend from './friends';\r\nimport Friend from './Friend';\r\nimport Chat from './Chat';\r\nimport Aux from \"../../../../../../../hoc/_Aux\";\r\n\r\nclass Friends extends Component {\r\n    state = {\r\n        chatOpen: false,\r\n        user: []\r\n    };\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if (!nextProps.listOpen) {\r\n            this.setState({chatOpen: false, user: []});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const friendList = (friend).map(f => {\r\n            return <Friend key={f.id} data={f} activeId={this.state.user.id} clicked={() => this.setState({chatOpen: true, user: f})} />;\r\n        });\r\n        return (\r\n            <Fragment>\r\n                {friendList}\r\n                <Chat user={this.state.user} chatOpen={this.state.chatOpen} listOpen={this.props.listOpen} closed={() => this.setState({chatOpen: false, user: []})}/>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Friends;\r\n"]},"metadata":{},"sourceType":"module"}