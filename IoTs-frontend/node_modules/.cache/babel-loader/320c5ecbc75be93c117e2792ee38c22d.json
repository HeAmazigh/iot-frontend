{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/pages/layout/AdminLayout/Navigation/OutsideClick/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport windowSize from 'react-window-size';\nimport * as actionTypes from \"../../../../../store/actions\";\n\nclass OutsideClick extends Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n  /**\r\n   * close menu if clicked on outside of element\r\n   */\n\n\n  handleOutsideClick(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      if (this.props.windowWidth < 992 && this.props.collapseMenu) {\n        this.props.onToggleNavigation();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-outside\",\n      ref: this.setWrapperRef,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    collapseMenu: state.collapseMenu\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleNavigation: () => dispatch({\n      type: actionTypes.COLLAPSE_MENU\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(windowSize(OutsideClick));","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/pages/layout/AdminLayout/Navigation/OutsideClick/index.js"],"names":["React","Component","connect","windowSize","actionTypes","OutsideClick","constructor","props","setWrapperRef","bind","handleOutsideClick","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","node","wrapperRef","event","contains","target","windowWidth","collapseMenu","onToggleNavigation","render","children","mapStateToProps","state","mapDispatchToProps","dispatch","type","COLLAPSE_MENU"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,8BAA7B;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKH,kBAA5C;AACH;;AAEDI,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKL,kBAA/C;AACH;;AAEDF,EAAAA,aAAa,CAACQ,IAAD,EAAO;AAChB,SAAKC,UAAL,GAAkBD,IAAlB;AACH;AAED;AACJ;AACA;;;AACIN,EAAAA,kBAAkB,CAACQ,KAAD,EAAQ;AACtB,QAAI,KAAKD,UAAL,IAAmB,CAAC,KAAKA,UAAL,CAAgBE,QAAhB,CAAyBD,KAAK,CAACE,MAA/B,CAAxB,EAAgE;AAC5D,UAAI,KAAKb,KAAL,CAAWc,WAAX,GAAyB,GAAzB,IAAgC,KAAKd,KAAL,CAAWe,YAA/C,EAA6D;AACzD,aAAKf,KAAL,CAAWgB,kBAAX;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAE,KAAKhB,aAAvC;AAAA,gBAAuD,KAAKD,KAAL,CAAWkB;AAAlE;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAjCgC;;AAoCrC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHL,IAAAA,YAAY,EAAEK,KAAK,CAACL;AADjB,GAAP;AAGH,CAJD;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHN,IAAAA,kBAAkB,EAAE,MAAMM,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE1B,WAAW,CAAC2B;AAAnB,KAAD;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAe7B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA8CzB,UAAU,CAACE,YAAD,CAAxD,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport * as actionTypes from \"../../../../../store/actions\";\r\n\r\nclass OutsideClick extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setWrapperRef = this.setWrapperRef.bind(this);\r\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleOutsideClick);\r\n    }\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    /**\r\n     * close menu if clicked on outside of element\r\n     */\r\n    handleOutsideClick(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\r\n            if (this.props.windowWidth < 992 && this.props.collapseMenu) {\r\n                this.props.onToggleNavigation();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"nav-outside\" ref={this.setWrapperRef}>{this.props.children}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collapseMenu: state.collapseMenu\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleNavigation: () => dispatch({type: actionTypes.COLLAPSE_MENU}),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (windowSize(OutsideClick));"]},"metadata":{},"sourceType":"module"}