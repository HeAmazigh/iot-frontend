{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/Demo/HighLevelLowlevelQuestionaire/test.js\";\nimport React, { Component } from \"react\";\nimport * as Survey from \"survey-react\";\nimport \"survey-react/modern.css\"; // import \"./index.css\";\n\nSurvey.StylesManager.applyTheme(\"modern\");\n\nclass SurveyComponent extends Component {\n  constructor() {\n    super();\n  } //Text Markdown HTML\n\n\n  render() {\n    const json = {\n      showNavigationButtons: \"both\",\n      showPageTitles: false,\n      showQuestionNumbers: \"off\",\n      showProgressBar: \"top\",\n      progressBarType: \"buttons\"\n    };\n    const model = new Survey.Model(json);\n    return /*#__PURE__*/_jsxDEV(Survey.Survey, {\n      model: model,\n      id: \"survey\",\n      onAfterRenderQuestion: this.onAfterRenderQuestion,\n      onAfterRenderPanel: this.onAfterRenderPanel //showNavigationButtons={this.showNavigationButtons}\n      // onComplete={(result)=> console.log(result.data)}\n      ,\n      onComplete: this.onComplete // onTextMarkdown={this.onTextMarkdown}\n      //onComplete={sendDataToServer}\n      ,\n      onCurrentPageChanged: this.doOnCurrentPageChanged,\n      sendResultOnPageNext: true,\n      showCompletedPage: this.showCompletedPage,\n      onPartialSend: this.onSurveyPartialSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SurveyComponent;","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/Demo/HighLevelLowlevelQuestionaire/test.js"],"names":["React","Component","Survey","StylesManager","applyTheme","SurveyComponent","constructor","render","json","showNavigationButtons","showPageTitles","showQuestionNumbers","showProgressBar","progressBarType","model","Model","onAfterRenderQuestion","onAfterRenderPanel","onComplete","doOnCurrentPageChanged","showCompletedPage","onSurveyPartialSend"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AAEA,OAAO,yBAAP,C,CACA;;AAEAA,MAAM,CAACC,aAAP,CAAqBC,UAArB,CAAgC,QAAhC;;AAEA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AACtCK,EAAAA,WAAW,GAAG;AACZ;AACD,GAHqC,CAKtC;;;AAIAC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG;AAETC,MAAAA,qBAAqB,EAAE,MAFd;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,mBAAmB,EAAE,KAJZ;AAKTC,MAAAA,eAAe,EAAE,KALR;AAMTC,MAAAA,eAAe,EAAE;AANR,KAAb;AAQA,UAAMC,KAAK,GAAG,IAAIZ,MAAM,CAACa,KAAX,CAAiBP,IAAjB,CAAd;AAEA,wBACE,QAAC,MAAD,CAAQ,MAAR;AACE,MAAA,KAAK,EAAEM,KADT;AAEE,MAAA,EAAE,EAAC,QAFL;AAGE,MAAA,qBAAqB,EAAE,KAAKE,qBAH9B;AAIE,MAAA,kBAAkB,EAAE,KAAKC,kBAJ3B,CAKE;AACA;AANF;AAOE,MAAA,UAAU,EAAE,KAAKC,UAPnB,CAQE;AACA;AATF;AAUE,MAAA,oBAAoB,EAAE,KAAKC,sBAV7B;AAWE,MAAA,oBAAoB,EAAE,IAXxB;AAYE,MAAA,iBAAiB,EAAE,KAAKC,iBAZ1B;AAaE,MAAA,aAAa,EAAE,KAAKC;AAbtB;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AArCqC;;AAwCxC,eAAehB,eAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport * as Survey from \"survey-react\";\r\n\r\nimport \"survey-react/modern.css\";\r\n// import \"./index.css\";\r\n\r\nSurvey.StylesManager.applyTheme(\"modern\");\r\n\r\nclass SurveyComponent extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  //Text Markdown HTML\r\n \r\n\r\n\r\n  render() {\r\n    const json = {\r\n       \r\n        showNavigationButtons: \"both\",\r\n        showPageTitles: false,\r\n        showQuestionNumbers: \"off\",\r\n        showProgressBar: \"top\",\r\n        progressBarType: \"buttons\"\r\n      };\r\n    const model = new Survey.Model(json);\r\n\r\n    return (\r\n      <Survey.Survey\r\n        model={model}\r\n        id=\"survey\"\r\n        onAfterRenderQuestion={this.onAfterRenderQuestion}\r\n        onAfterRenderPanel={this.onAfterRenderPanel}\r\n        //showNavigationButtons={this.showNavigationButtons}\r\n        // onComplete={(result)=> console.log(result.data)}\r\n        onComplete={this.onComplete}\r\n        // onTextMarkdown={this.onTextMarkdown}\r\n        //onComplete={sendDataToServer}\r\n        onCurrentPageChanged={this.doOnCurrentPageChanged}\r\n        sendResultOnPageNext={true}\r\n        showCompletedPage={this.showCompletedPage}\r\n        onPartialSend={this.onSurveyPartialSend}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SurveyComponent;\r\n"]},"metadata":{},"sourceType":"module"}