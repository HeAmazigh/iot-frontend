{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/pages/authpages/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { NavLink } from 'react-router-dom'; //import {useHttpClient} from '../../shared/hooks/http-hook';\n//import {AuthContext} from '../../shared/context/auth-context';\n\nimport './../../assets/scss/style.scss';\n\nconst Signup = () => {\n  _s();\n\n  //const Auth = useContext(AuthContext);\n  //const {error, sendRequest} = useHttpClient();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().max(30, 'Must be 30 characters or less').required('Required'),\n      email: Yup.string().email('Invalid emailaddress').required('Required'),\n      password: Yup.string().min(8, 'Must be 8 characters or more').required('Required'),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match')\n    }),\n    onSubmit: async values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" dign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/pages/authpages/Signup.jsx"],"names":["React","Fragment","useFormik","Yup","NavLink","Signup","formik","initialValues","username","email","password","passwordConfirmation","validationSchema","object","string","max","required","min","oneOf","ref","onSubmit","values","alert","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,OAAR,QAAsB,kBAAtB,C,CAEA;AACA;;AAEA,OAAO,gCAAP;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB;AACA;AAEA,QAAMC,MAAM,GAAGJ,SAAS,CAAC;AACrBK,IAAAA,aAAa,EAAE;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,KAAK,EAAC,EAFK;AAGXC,MAAAA,QAAQ,EAAC,EAHE;AAIXC,MAAAA,oBAAoB,EAAC;AAJV,KADM;AAQrBC,IAAAA,gBAAgB,EAAET,GAAG,CAACU,MAAJ,CAAW;AACzBL,MAAAA,QAAQ,EAAEL,GAAG,CAACW,MAAJ,GAAaC,GAAb,CAAiB,EAAjB,EAAqB,+BAArB,EAAsDC,QAAtD,CAA+D,UAA/D,CADe;AAEzBP,MAAAA,KAAK,EAAEN,GAAG,CAACW,MAAJ,GAAaL,KAAb,CAAmB,sBAAnB,EAA2CO,QAA3C,CAAoD,UAApD,CAFkB;AAGzBN,MAAAA,QAAQ,EAAEP,GAAG,CAACW,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAqB,8BAArB,EAAqDD,QAArD,CAA8D,UAA9D,CAHe;AAIzBL,MAAAA,oBAAoB,EAAER,GAAG,CAACW,MAAJ,GAAaI,KAAb,CAAmB,CAACf,GAAG,CAACgB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAAnB,EAAgD,qBAAhD;AAJG,KAAX,CARG;AAerBC,IAAAA,QAAQ,EAAE,MAAMC,MAAN,IAAgB;AACtBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AAEH;AAlBoB,GAAD,CAAxB;AAqBA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/BD;;GAAMhB,M;UAKaH,S;;;KALbG,M;AAiCN,eAAeA,MAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport {useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {NavLink} from 'react-router-dom';\n\n//import {useHttpClient} from '../../shared/hooks/http-hook';\n//import {AuthContext} from '../../shared/context/auth-context';\n\nimport './../../assets/scss/style.scss';\n\nconst Signup = () => {\n\n    //const Auth = useContext(AuthContext);\n    //const {error, sendRequest} = useHttpClient();\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email:'',\n            password:'',\n            passwordConfirmation:''\n        },\n\n        validationSchema: Yup.object({\n            username: Yup.string().max(30, 'Must be 30 characters or less').required('Required'),\n            email: Yup.string().email('Invalid emailaddress').required('Required'),\n            password: Yup.string().min(8 , 'Must be 8 characters or more').required('Required'),\n            passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Password must match')\n        }),\n\n        onSubmit: async values => {\n            alert(JSON.stringify(values, null, 2));\n            \n        }\n    });\n\n    return (\n        <Fragment>\n            <h1> dign up</h1>\n        </Fragment>\n    )\n}\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}