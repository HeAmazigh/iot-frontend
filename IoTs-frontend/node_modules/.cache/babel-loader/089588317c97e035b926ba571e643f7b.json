{"ast":null,"code":"/*\n * @Author: ryma.naiatamara \n * @Date: 2020-02-12 11:23:59 \n * @Last Modified by: mikey.zhaopeng\n * @Last Modified time: 2020-02-12 11:51:36\n * \n *  Copyright (c) 2019 Red Alert Labs S.A.S.\n *  All Rights Reserved.\n *  This software is the confidential and proprietary information of\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\n *  disclose such Confidential Information and shall use it only in\n *  accordance with the terms of the license agreement you entered\n *  into with Red Alert Labs S.A.S.\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\n * \n */\nimport * as actionTypes from '../actionTypes/flashMessage';\nimport shortid from 'shortid';\nimport findIndex from 'lodash/findIndex'; //lodash tool library needs to see\n//Initialize a state to an array\n\nconst flashMessageReduser = (state = [], action = {}) => {\n  switch (action.type) {\n    case actionTypes.ADD_FLASH_MESSAGE:\n      return [...state, {\n        id: shortid.generate(),\n        type: action.message.type,\n        text: action.message.text\n      }];\n\n    case actionTypes.DELETE_FLASE_MESSAGE:\n      //findIndex overload to get the id assigned to index\n      const index = findIndex(state, {\n        id: action.id\n      }); //Determine whether the message exists\n\n      if (index >= 0) {\n        return [...state.slice(0, index), ...state.slice(index + 1)];\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default flashMessageReduser;","map":{"version":3,"sources":["/Users/mazigh/Desktop/iots/IoTs-frontend/iots-frontend/src/redux/redusers/flashMessageReduser.js"],"names":["actionTypes","shortid","findIndex","flashMessageReduser","state","action","type","ADD_FLASH_MESSAGE","id","generate","message","text","DELETE_FLASE_MESSAGE","index","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,WAAZ,MAA6B,6BAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAAyC;AAEzC;;AACA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAM,GAAC,EAAjB,KAAsB;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,iBAAjB;AACI,aAAO,CACH,GAAGH,KADA,EAEH;AACII,QAAAA,EAAE,EAACP,OAAO,CAACQ,QAAR,EADP;AAEIH,QAAAA,IAAI,EAACD,MAAM,CAACK,OAAP,CAAeJ,IAFxB;AAGIK,QAAAA,IAAI,EAACN,MAAM,CAACK,OAAP,CAAeC;AAHxB,OAFG,CAAP;;AAQJ,SAAKX,WAAW,CAACY,oBAAjB;AAEI;AACA,YAAMC,KAAK,GAAGX,SAAS,CAACE,KAAD,EAAO;AAACI,QAAAA,EAAE,EAACH,MAAM,CAACG;AAAX,OAAP,CAAvB,CAHJ,CAII;;AACA,UAAGK,KAAK,IAAG,CAAX,EAAa;AACT,eAAM,CACF,GAAGT,KAAK,CAACU,KAAN,CAAY,CAAZ,EAAcD,KAAd,CADD,EAEF,GAAGT,KAAK,CAACU,KAAN,CAAYD,KAAK,GAAC,CAAlB,CAFD,CAAN;AAIH;;AACD,aAAOT,KAAP;;AACJ;AACI,aAAOA,KAAP;AAvBR;AAyBH,CA1BD;;AA2BA,eAAeD,mBAAf","sourcesContent":["/*\n * @Author: ryma.naiatamara \n * @Date: 2020-02-12 11:23:59 \n * @Last Modified by: mikey.zhaopeng\n * @Last Modified time: 2020-02-12 11:51:36\n * \n *  Copyright (c) 2019 Red Alert Labs S.A.S.\n *  All Rights Reserved.\n *  This software is the confidential and proprietary information of\n *  Red Alert Labs S.A.S. (Confidential Information). You shall not\n *  disclose such Confidential Information and shall use it only in\n *  accordance with the terms of the license agreement you entered\n *  into with Red Alert Labs S.A.S.\n *  RED ALERT LABS S.A.S. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE\n *  SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING\n *  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS\n *  FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RED ALERT LABS S.A.S. SHALL\n *  NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING,\n *  MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.\n * \n */\n\nimport * as actionTypes from '../actionTypes/flashMessage'\nimport shortid from 'shortid'   \nimport findIndex from 'lodash/findIndex' //lodash tool library needs to see\n\n//Initialize a state to an array\nconst flashMessageReduser = (state=[],action={})=>{\n    switch(action.type){\n        case actionTypes.ADD_FLASH_MESSAGE:\n            return [\n                ...state,\n                {\n                    id:shortid.generate(),\n                    type:action.message.type,\n                    text:action.message.text\n                }\n            ]\n        case actionTypes.DELETE_FLASE_MESSAGE:\n            \n            //findIndex overload to get the id assigned to index\n            const index = findIndex(state,{id:action.id});\n            //Determine whether the message exists\n            if(index >=0){\n                return[\n                    ...state.slice(0,index),\n                    ...state.slice(index+1)\n                ]\n            }\n            return state;\n        default:\n            return state\n    }\n}\nexport default flashMessageReduser"]},"metadata":{},"sourceType":"module"}